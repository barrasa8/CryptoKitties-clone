{
  "contractName": "PandaProxy",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/ismael/Documents/Blockchain Bootcamp/GIT/CryptoKitties-clone/contracts/PandaProxy.sol\":\"PandaProxy\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ismael/Documents/Blockchain Bootcamp/GIT/CryptoKitties-clone/contracts/PandaProxy.sol\":{\"keccak256\":\"0xc29d0480250c4aa90492cd24f18d0eba218c598499f29c49f91b64e78f3c2116\",\"urls\":[\"bzz-raw://a84ac4115aeb7fbeef6924ef48ad0a6e872ef1b2d4cd995ebc1493f055228df3\",\"dweb:/ipfs/Qmea5rfLaT2Y5meWPtyCJugXq9cKfv4TXrPcWAWkPiqce1\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a72315820f0dc08ce56123058bafe8888f33e341754ff03a10680452d5f353d112c1fd9c864736f6c634300050c0032",
  "deployedBytecode": "0x6080604052600080fdfea265627a7a72315820f0dc08ce56123058bafe8888f33e341754ff03a10680452d5f353d112c1fd9c864736f6c634300050c0032",
  "sourceMap": "26:1113:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26:1113:4;;;;;;;",
  "deployedSourceMap": "26:1113:4:-;;;;;",
  "source": "pragma solidity ^0.5.12;\n\ncontract PandaProxy {\n /**\n     * @dev Delegates the current call to `implementation`.\n     * \n     * This function does not return to its internall call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 { revert(0, returndatasize()) }\n            default { return(0, returndatasize()) }\n        }\n    }\n\n  \n}\n",
  "sourcePath": "/home/ismael/Documents/Blockchain Bootcamp/GIT/CryptoKitties-clone/contracts/PandaProxy.sol",
  "ast": {
    "absolutePath": "/home/ismael/Documents/Blockchain Bootcamp/GIT/CryptoKitties-clone/contracts/PandaProxy.sol",
    "exportedSymbols": {
      "PandaProxy": [
        384
      ]
    },
    "id": 385,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 376,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 384,
        "linearizedBaseContracts": [
          384
        ],
        "name": "PandaProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "298:835:4",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "implementation": {
                        "declaration": 378,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "808:14:4",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 381,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    calldatacopy(0, 0, calldatasize())\n    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n    returndatacopy(0, 0, returndatasize())\n    switch result\n    case 0 { revert(0, returndatasize()) }\n    default { return(0, returndatasize()) }\n}",
                  "src": "364:763:4"
                }
              ]
            },
            "documentation": "@dev Delegates the current call to `implementation`.\n\n     * This function does not return to its internall call site, it will return directly to the external caller.",
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_delegate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "name": "implementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "265:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "265:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "264:24:4"
            },
            "returnParameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "298:0:4"
            },
            "scope": 384,
            "src": "246:887:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 385,
        "src": "26:1113:4"
      }
    ],
    "src": "0:1140:4"
  },
  "legacyAST": {
    "absolutePath": "/home/ismael/Documents/Blockchain Bootcamp/GIT/CryptoKitties-clone/contracts/PandaProxy.sol",
    "exportedSymbols": {
      "PandaProxy": [
        384
      ]
    },
    "id": 385,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 376,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 384,
        "linearizedBaseContracts": [
          384
        ],
        "name": "PandaProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "298:835:4",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "implementation": {
                        "declaration": 378,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "808:14:4",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 381,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    calldatacopy(0, 0, calldatasize())\n    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n    returndatacopy(0, 0, returndatasize())\n    switch result\n    case 0 { revert(0, returndatasize()) }\n    default { return(0, returndatasize()) }\n}",
                  "src": "364:763:4"
                }
              ]
            },
            "documentation": "@dev Delegates the current call to `implementation`.\n\n     * This function does not return to its internall call site, it will return directly to the external caller.",
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_delegate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "name": "implementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "265:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "265:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "264:24:4"
            },
            "returnParameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "298:0:4"
            },
            "scope": 384,
            "src": "246:887:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 385,
        "src": "26:1113:4"
      }
    ],
    "src": "0:1140:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-10-13T12:13:28.530Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}