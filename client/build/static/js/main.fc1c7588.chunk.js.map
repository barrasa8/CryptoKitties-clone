{"version":3,"sources":["getWeb3.js","components/Header.jsx","assets/js/colors.js","assets/sc/StyledPanda.jsx","components/Panda.jsx","components/DnaBadge.jsx","assets/js/shapes.js","assets/js/animations.js","components/PandaCard.jsx","components/PandaAttributes.jsx","assets/js/utils.js","components/PandaFactory.jsx","components/PandaGallery.jsx","components/PandaMarket.jsx","components/BreedModal.jsx","components/BreedRoom.jsx","assets/img/PandaGallery.jpg","components/Home.jsx","components/PandaDetail.jsx","components/Body.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","Header","state","contractOwner","this","props","contract","methods","call","from","accounts","_contractOwner","setState","Navbar","bg","expand","sticky","Brand","id","to","className","Collapse","Nav","Component","colors","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","Object","values","StyledPanda","styled","div","dna","dnaarmleg","dnaeyepatch","dnainnerearfoot","dnaheadbody","decorationMidcolor","decorationSidescolor","Panda","animations","eyeShape","mouthShape","DnaBadge","dnaeyeshape","dnamouthshape","animation","lastNum","birthTime","mumId","dadId","generation","1","2","3","4","allEyeVariations","allMouthVariations","5","6","allAnimations","eyeShapes","mouthShapes","PandaCard","toLowerCase","PandaAttributes","HandleSliderChange","target","SliderChange","name","value","Tab","Container","defaultActiveKey","variant","Item","Link","eventKey","Content","Pane","type","min","max","onChange","bind","eyeShapeName","mouthShapeName","animationName","genesToDNA","gene","parseInt","slice","epochToUTCDate","epochTime","Date","toUTCString","getPanda","tokenId","_panda","_pandaItem","pandaTokenId","genes","getPandas","_pandaList","_pandasOfOwner","PandaTokenIdArray","i","length","push","getMarketOffers","pandaContract","marketContract","_marketOfferList","getAllTokenOnSale","marketOffersArray","getOffer","_offer","_marketOfferItem","seller","price","index","active","setApprovalForAll","approvalFlag","options","address","send","setOffer","error","removeOffer","_offerItem","buyPanda","defaultDna","PandaFactory","getDna","_createPandaGen0","_dna","createPandaGen0","txHash","setDefaultPandaDna","_dnaProperty","prevState","randomPanda","assign","Math","floor","random","isMounted","fluid","Row","align","birthEvent","toString","owner","PandaId","onClick","Col","md","span","offset","PandaGallery","pandaList","map","panda","key","PandaMarket","OfferList","offerCount","getActiveOfferCount","_activeOfferCount","_offerList","Offer","Badge","utils","fromWei","String","BreedModal","handleShow","handleHide","isRedirect","show","ButtonToolbar","Button","parenttype","Modal","onHide","dialogClassName","closeButton","Title","Body","handleclick","Footer","BreedRoom","handleClick","parentType","MumPanda","mumPandaShow","DadPanda","dadPandaShow","_Breed","mumTokenId","dadTokenId","alert","breed","modalShow","Home","src","PandaGalleryImage","alt","PandaDetail","handleSubmit","event","preventDefault","undefined","offer","toWei","amount","match","params","handleChange","persist","handleRemove","_setApprovalForAll","isApprovedForAll","_isApprovedForAll","IsMarketOpperator","pandaItem","pandaOwner","ownerOf","_ownerOf","onSubmit","InputGroup","FormControl","aria-label","Append","Text","eventBirth","events","Birth","BirthEvent","returnValues","_owner","MarketTransactionEvent","MarketTransaction","TxType","TransferEvent","Transfer","path","exact","component","marketTransactionEvent","App","storageValue","componentDidMount","eth","getAccounts","net","getId","networkId","deployedNetwork","PandaProxy","networks","instance","Contract","PandaContract","abi","marketDeployedNetwork","PandaMarketPlaceProxy","marketInstance","PandaMarketPlaceContract","runExample","on","chainId","document","location","reload","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc1c7588.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from 'react';\nimport {Navbar,Nav} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\nimport \"../assets/css/header.css\";\n\n\n\nclass  Header extends Component {\n    constructor() {\n        super();\n        this.state = {\n            contractOwner:0\n        }\n    }\n\n\n    async componentDidMount(){\n        let _contractOwner;\n        \n       _contractOwner = await this.props.contract.methods.contractOwner().call({from: this.props.accounts[0]});\n       \n       this.setState(() => ({\n        contractOwner: _contractOwner\n      }));\n    }\n\n    render() { \n        return ( \n            <Navbar bg=\"light\" expand=\"lg\"  sticky=\"top\"  >\n                <Navbar.Brand id=\"nav-bar-title\"><Link to=\"\" className= \"nav-link\">Crypto Panda</Link></Navbar.Brand>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        {this.state.contractOwner !== this.props.accounts[0] ? \"\"\n                            :<Link to=\"/factory\" className= \"nav-link\">Panda Factory</Link>\n                        } \n                        <Link to=\"/gallery\" className= \"nav-link\">My Collection</Link>\n                        <Link to=\"/breed\" className= \"nav-link\">Breed Room</Link>\n                        <Link to=\"/market\" className= \"nav-link\">Market Place</Link>\n                    </Nav>\n                </Navbar.Collapse>\n                \n            </Navbar>\n         );\n    }\n}\n \nexport default Header;","var colors = {\n  10: \"ffcc80\",\n  11: \"3f1174\",\n  12: \"b22a90\",\n  13: \"fff3e0\",\n  14: \"4c858b\",\n  15: \"18bebe\",\n  16: \"b5044b\",\n  17: \"d6b1d4\",\n  18: \"fecb40\",\n  19: \"748882\",\n  20: \"4a3c95\",\n  21: \"482916\",\n  22: \"267bf0\",\n  23: \"5af7e2\",\n  24: \"adeacc\",\n  25: \"cf2b03\",\n  26: \"b3c459\",\n  27: \"353f95\",\n  28: \"5d4993\",\n  29: \"ba8d15\",\n  30: \"da2457\",\n  31: \"ff17fe\",\n  32: \"d6e81d\",\n  33: \"daf2db\",\n  34: \"19b510\",\n  35: \"18e26f\",\n  36: \"b7c36a\",\n  37: \"8cb175\",\n  38: \"bdce32\",\n  39: \"f2e0ba\",\n  40: \"a2f8a5\",\n  41: \"64bf50\",\n  42: \"f1a771\",\n  43: \"4982a9\",\n  44: \"f66c41\",\n  45: \"2fe802\",\n  46: \"bda142\",\n  47: \"8342ff\",\n  48: \"2b4ab4\",\n  49: \"ad4595\",\n  50: \"cae4f3\",\n  51: \"b76d01\",\n  52: \"8e8207\",\n  53: \"285b9f\",\n  54: \"c4422a\",\n  55: \"f1eaa7\",\n  56: \"e3a0cc\",\n  57: \"65c116\",\n  58: \"656ccf\",\n  59: \"7c25f4\",\n  60: \"1e18d1\",\n  61: \"688a7d\",\n  62: \"1fe786\",\n  63: \"425716\",\n  64: \"4ac043\",\n  65: \"547836\",\n  66: \"24a216\",\n  67: \"fd9bba\",\n  68: \"24894d\",\n  69: \"c54b03\",\n  70: \"6fbdce\",\n  71: \"cff1dd\",\n  72: \"8805fb\",\n  73: \"fe99d2\",\n  74: \"c52f14\",\n  75: \"e31c54\",\n  76: \"d010eb\",\n  77: \"b83436\",\n  78: \"c294b6\",\n  79: \"564a6c\",\n  80: \"531bcf\",\n  81: \"c04b8c\",\n  82: \"3cd2ef\",\n  83: \"82286c\",\n  84: \"aa2639\",\n  85: \"86be6c\",\n  86: \"e62102\",\n  87: \"5471fc\",\n  88: \"5deccc\",\n  89: \"703c75\",\n  90: \"9a8e8f\",\n  91: \"8b9307\",\n  92: \"fcbc82\",\n  93: \"ea5978\",\n  94: \"b8e370\",\n  95: \"43474b\",\n  96: \"262d2b\",\n  97: \"ddd67e\",\n  98: \"344867\",\n};\n\n\nexport const allColors = ()=>{\n    return colors;\n};\n","import { allColors } from '../js/colors';\nimport styled from 'styled-components'\n\n\n/*\nset of available colors\n*/\nconst colors = Object.values(allColors());\n\n/**\n * Style of Panda\n */\nexport const StyledPanda = styled.div`\n\n/**********************************************************\ncolor variables\n*********************************************************/\n/* colors[props.dna.headColor] */\n\n.a-left-leg,.a-right-leg,.a-left-foot,.a-right-foot,.a-left-arm,.a-right-arm,.a-arms{\n    background: #${props => colors[props.dna.dnaarmleg-10]}\n}\n.a-left-eye-patch,.a-right-eye-patch{\n    background: #${props => colors[props.dna.dnaeyepatch-10]}\n}\n.a-left-inner-ear,.a-right-inner-ear,.a-left-toe-1,.a-left-toe-2,.a-left-toe-3,.a-left-heel,.a-right-toe-1,.a-right-toe-2,.a-right-toe-3,.a-right-heel,.a-nose{\n    background: #${props => colors[props.dna.dnainnerearfoot-10]}\n}\n.a-body,.a-head,.a-left-ear,.a-right-ear{\n    background: #${props => colors[props.dna.dnaheadbody-10]}\n}\n.a-ring-middle{\n    background: #${props => colors[props.dna.decorationMidcolor-10]}\n}\n.a-ring-left,.a-ring-right{\n    background: #${props => colors[props.dna.decorationSidescolor-10]}\n}\n\n\n\n`","import React, { Component } from \"react\";\nimport { StyledPanda } from '../assets/sc/StyledPanda';\nimport '../assets/css/panda.css'\nimport '../assets/css/animations.css'\n\n\n// const mouthId = mouthShapes[this.props.dna.mouthShape]\n// let earsVariation = mouthId.search('Normal') >=0 ? \"a-mouth\" : \"\";\n\nclass Panda extends Component {\n  render() {\n    return (\n      \n      <StyledPanda dna={this.props.dna}>\n        {/* {console.log(this.props.animations)} */}\n        <div className=\"a-container\">\n          <div className=\"a-bamboos\">\n            <div className=\"a-bamboo-stick a-bamboo-stick-1\">\n              <div className=\"a-bamboo-divider\"></div>\n              <div className=\"a-bamboo-divider\"></div>\n              <div className=\"a-bamboo-divider\"></div>\n              <div className=\"a-bamboo-divider\"></div>\n              <div className=\"a-bamboo-divider\"></div>\n            </div>\n            <div className=\"a-bamboo-stick a-bamboo-stick-2\">\n              <div className=\"a-bamboo-divider\"></div>\n              <div className=\"a-bamboo-divider\"></div>\n              <div className=\"a-bamboo-divider\"></div>\n              <div className=\"a-bamboo-divider\"></div>\n              <div className=\"a-bamboo-divider\"></div>\n            </div>\n            <div className=\"a-bamboo-stick a-bamboo-stick-3\">\n              <div className=\"a-bamboo-divider\"></div>\n              <div className=\"a-bamboo-divider\"></div>\n              <div className=\"a-bamboo-divider\"></div>\n              <div className=\"a-bamboo-divider\"></div>\n              <div className=\"a-bamboo-divider\"></div>\n            </div>\n          </div>\n          <div className=\"a-ears\">\n            <div className={`a-left-ear ${this.props.animations===\"Head\" ? \"headLeftEarMove\":\"\"}`} id=\"lEar\">\n              <div className=\"a-left-inner-ear\"></div>\n            </div>\n            <div className={`a-right-ear  ${this.props.animations===\"Head\" ? \"headRightEarMove\":\"\"}`}  id=\"rEar\">\n              <div className=\"a-right-inner-ear\"></div>\n            </div>\n          </div>\n          <div className={`a-head ${this.props.animations===\"Head\" ? \"headMove\":\"\"}`} id=\"head\">\n            <div className=\"a-eyes\">\n              <div className=\"a-left-eye-patch\">\n                <div className={`a-left-eye a-left-eye-${this.props.eyeShape}`} id=\"lEye\">\n                  <div className={`a-left-pupil a-left-pupil-${this.props.eyeShape}`} id=\"lPupil\">\n                    <div className=\"a-left-pupil-spark\"></div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"a-right-eye-patch\">\n                <div className={`a-right-eye a-right-eye-${this.props.eyeShape}`} id=\"rEye\">\n                  <div\n                    className={`a-right-pupil a-right-pupil-${this.props.eyeShape}`}\n                    id=\"rPupil\"\n                  >\n                    <div className=\"a-right-pupil-spark\"></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className={`a-nose ${this.props.animations===\"Nose\" ? \"noseMove\":\"\"}`} id=\"nose\"></div>\n            <div className={`a-mouth a-mouth-${this.props.mouthShape}`} id=\"mouth\"></div>\n          </div>\n          <div className=\"a-arms\">\n            <div className=\"a-ring-left\"></div>\n            <div className=\"a-ring-middle\"></div>\n            <div className=\"a-ring-right\"></div>\n            <div className=\"a-left-arm\"></div>\n            <div className=\"a-right-arm\"></div>\n          </div>\n          <div  className=\"a-body\"></div>\n          <div className=\"a-legs\">\n            <div  className=\"a-left-leg\"></div>\n            <div  className={`a-left-foot ${(this.props.animations===\"Left-Foot\" || this.props.animations===\"Both-Feet\") ? \"leftFootMove\":\"\"}`} id=\"lFoot\"></div>\n            <div  className={`a-left-toes a-left-toe-1 ${(this.props.animations===\"Left-Foot\" || this.props.animations===\"Both-Feet\") ? \"leftFootToe1Move\":\"\"}`} id=\"lFootToe1\"></div>\n            <div  className={`a-left-toes a-left-toe-2 ${(this.props.animations===\"Left-Foot\" || this.props.animations===\"Both-Feet\") ? \"leftFootToe2Move\":\"\"}`} id=\"lFootToe2\"></div>\n            <div  className={`a-left-toes a-left-toe-3 ${(this.props.animations===\"Left-Foot\" || this.props.animations===\"Both-Feet\") ? \"leftFootToe3Move\":\"\"}`} id=\"lFootToe3\"></div>\n            <div  className={`a-left-heel ${(this.props.animations===\"Left-Foot\" || this.props.animations===\"Both-Feet\") ? \"leftHeelMove\":\"\"}`} id=\"lFootH`el\"></div>\n            <div  className=\"a-right-leg\"></div>\n            <div  className={`a-right-foot ${(this.props.animations===\"Right-Foot\" || this.props.animations===\"Both-Feet\") ? \"rightFootMove\":\"\"}`} id=\"rFoot\"></div>\n            <div  className={`a-right-toes a-right-toe-1 ${(this.props.animations===\"Right-Foot\" || this.props.animations===\"Both-Feet\") ? \"rightFootToe1Move\":\"\"}`} id=\"rFootToe1\"></div>\n            <div  className={`a-right-toes a-right-toe-2 ${(this.props.animations===\"Right-Foot\" || this.props.animations===\"Both-Feet\") ? \"rightFootToe2Move\":\"\"}`} id=\"rFootToe2\"></div>\n            <div  className={`a-right-toes a-right-toe-3 ${(this.props.animations===\"Right-Foot\" || this.props.animations===\"Both-Feet\") ? \"rightFootToe3Move\":\"\"}`} id=\"rFootToe3\"></div>\n            <div  className={`a-right-heel ${(this.props.animations===\"Right-Foot\" || this.props.animations===\"Both-Feet\") ? \"rightHeelMove\":\"\"}`} id=\"rFootHeel\"></div>\n          </div>\n        </div>\n        <br />\n      </StyledPanda>\n    );\n  }\n}\n\nexport default Panda;\n","import React, { Component } from \"react\";\nimport \"../assets/css/DnaBadge.css\";\n\nclass DnaBadge extends Component {\n\n  render() {\n    return (\n      <div className=\"dnaDiv\" id=\"catDNA\">\n        <b>\n          DNA:\n          {/* <!-- Colors --> */}\n          <span id=\"dnaarmleg\">{this.props.dna.dnaarmleg}</span>\n          <span id=\"dnaeyepatch\">{this.props.dna.dnaeyepatch}</span>\n          <span id=\"dnainnerearfoot\">{this.props.dna.dnainnerearfoot}</span>\n          <span id=\"dnaheadbody\">{this.props.dna.dnaheadbody}</span>\n          {/* <!-- Pandatributes --> */}\n          <span id=\"dnaeyeshape\">{this.props.dna.dnaeyeshape}</span>\n          <span id=\"dnamouthshape\">{this.props.dna.dnamouthshape}</span>\n          <span id=\"dnadecorationMid\">{this.props.dna.decorationMidcolor}</span>\n          <span id=\"dnadecorationSides\">{this.props.dna.decorationSidescolor}</span>\n          <span id=\"dnaanimation\">{this.props.dna.animation}</span>\n          <span id=\"dnaspecial\">{this.props.dna.lastNum}</span>\n        </b>\n        <br/>\n        <b>Birth:</b> {this.props.birthTime} <br/>\n        <b>MumID:</b> {this.props.mumId}\n        <b> | DadID:</b> {this.props.dadId}\n        <b> | Generation:</b> {this.props.generation}\n      </div>\n    );\n  }\n}\n\nexport default DnaBadge;\n","var  eyeShape =  {\n    1: \"Normal\",\n    2: \"Shy\",\n    3: \"Right-Thinker\",\n    4: \"Left-Thinker\"\n  }\n  \n  export const allEyeVariations = () => {\n    return eyeShape;\n}\nvar mouthShape = {\n    1: \"Normal\",\n    2: \"Happy\",\n    3: \"Sad\",\n    4: \"Surprise\"\n  }\n  \n  export const allMouthVariations = () => {\n    return mouthShape;\n}","var animations =  {\n    1: \"Off\",\n    2: \"Head\",\n    3: \"Nose\",\n    4: \"Left-Foot\",\n    5: \"Right-Foot\",\n    6: \"Both-Feet\"\n}\n\nexport const allAnimations = () => {\n    return animations;\n}","import React, { Component } from \"react\";\nimport Panda from \"./Panda\";\nimport DnaBadge from \"./DnaBadge\";\n\nimport \"../assets/css/PandaCard.css\";\nimport { allEyeVariations } from \"../assets/js/shapes\";\nimport { allMouthVariations } from \"../assets/js/shapes\";\nimport { allAnimations } from \"../assets/js/animations\";\n\nconst eyeShapes = allEyeVariations();\nconst mouthShapes = allMouthVariations();\nconst animations = allAnimations();\n\nclass PandaCard extends Component {\n  render() {\n    return (\n      <div className={\"pandaBox hightlight \" + this.props.className}>\n        <Panda\n          dna={this.props.dna}\n          eyeShape={eyeShapes[this.props.dna.dnaeyeshape].toLowerCase()}\n          mouthShape={mouthShapes[this.props.dna.dnamouthshape].toLowerCase()}\n          animations={animations[this.props.dna.animation]}\n        />\n        <DnaBadge\n          dna={this.props.dna}\n          mumId={this.props.mumId}\n          dadId={this.props.dadId}\n          generation={this.props.generation}\n          birthTime={this.props.birthTime}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PandaCard;\n","import React, { Component } from \"react\";\nimport { Tab, Nav } from \"react-bootstrap\";\nimport \"../assets/css/PandaAttributes.css\";\n\nclass PandaAttributes extends Component {\n\n  HandleSliderChange = ({ target }) => {\n    this.props.SliderChange(target.name, target.value);\n  };\n\n  render() {\n    return (\n      <div className=\"col-lg-4 pandattributes m-1 light-b-shadow\">\n        <Tab.Container\n          id=\"panda-attributes-tabs\"\n          defaultActiveKey=\"panda-colors\"\n        >\n          <Nav variant=\"pills\" className=\"flex-row\">\n            <Nav.Item>\n              <Nav.Link eventKey=\"panda-colors\">Colors</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"panda-attributes\">Attributes</Nav.Link>\n            </Nav.Item>\n          </Nav>\n\n          <Tab.Content>\n            <Tab.Pane eventKey=\"panda-colors\">\n              <div className=\"form-group\">\n                <label>\n                  <b>Arm and legs</b>\n                  <span\n                    className=\"badge badge-dark ml-2\"\n                    id=\"armlegcode\"\n                  >{this.props.dna.dnaarmleg}</span>\n                </label>\n                <input\n                  name=\"dnaarmleg\"\n                  value={this.props.dna.dnaarmleg}\n                  type=\"range\"\n                  min=\"10\"\n                  max=\"98\"\n                  className=\"form-control-range\"\n                  id=\"armlegcolor\"\n                  onChange={this.HandleSliderChange.bind(this)}\n                />\n                <br />\n                <label>\n                  <b>Eye patches</b>\n                  <span\n                    className=\"badge badge-dark ml-2\"\n                    id=\"eyepatchcode\"\n                  >{this.props.dna.dnaeyepatch}</span>\n                </label>\n                <input\n                  name=\"dnaeyepatch\"\n                  value={this.props.dna.dnaeyepatch}\n                  type=\"range\"\n                  min=\"10\"\n                  max=\"98\"\n                  className=\"form-control-range\"\n                  id=\"eyepatchcolor\"\n                  onChange={this.HandleSliderChange.bind(this)}\n                />\n                <br />\n                <label>\n                  <b>Inner ear, foot and nose</b>\n                  <span\n                    className=\"badge badge-dark ml-2\"\n                    id=\"innerearfootcode\"\n                  >{this.props.dna.dnainnerearfoot}</span>\n                </label>\n                <input\n                  name=\"dnainnerearfoot\"\n                  value={this.props.dna.dnainnerearfoot}\n                  type=\"range\"\n                  min=\"10\"\n                  max=\"98\"\n                  className=\"form-control-range\"\n                  id=\"innerearfootcolor\"\n                  onChange={this.HandleSliderChange.bind(this)}\n                />\n                <br />\n                <label>\n                  <b>Head and body</b>\n                  <span\n                    className=\"badge badge-dark ml-2\"\n                    id=\"headbodycode\"\n                  >{this.props.dna.dnaheadbody}</span>\n                </label>\n                <input\n                  name=\"dnaheadbody\"\n                  value={this.props.dna.dnaheadbody}\n                  type=\"range\"\n                  min=\"10\"\n                  max=\"98\"\n                  className=\"form-control-range\"\n                  id=\"headbodycodecolor\"\n                  onChange={this.HandleSliderChange.bind(this)}\n                />\n                <br />\n              </div>\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"panda-attributes\">\n              <div className=\"form-group\">\n                <label>\n                  <b>Eye Shape</b>\n                  <span\n                    className=\"badge badge-dark ml-2\"\n                    id=\"eyeshapename\"\n                  >{this.props.eyeShapeName}</span>\n                </label>\n                <input\n                  name=\"dnaeyeshape\"\n                  value={this.props.dna.dnaeyeshape}\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"4\"\n                  className=\"form-control-range\"\n                  id=\"eyeshape\"\n                  onChange={this.HandleSliderChange.bind(this)}\n                />\n                <br />\n                <label>\n                  <b>Mouth Shape</b>\n                  <span\n                    className=\"badge badge-dark ml-2\"\n                    id=\"mouthshapename\"\n                  >{this.props.mouthShapeName}</span>\n                </label>\n                <input\n                  name=\"dnamouthshape\"\n                  value={this.props.dna.dnamouthshape}\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"4\"\n                  className=\"form-control-range\"\n                  id=\"mouthshape\"\n                  onChange={this.HandleSliderChange.bind(this)}\n                />\n                <br />\n                <label>\n                  <b>Pattern Decoration</b>\n                </label>\n                <div className=\"row\">\n                  <div className=\"col-lg-5\">\n                    <label>\n                      <b>Middle</b>\n                      <span\n                        className=\"badge badge-dark ml-2\"\n                        id=\"middledecorationcode\"\n                      >{this.props.dna.decorationMidcolor}</span>\n                    </label>\n                    <input\n                      name=\"decorationMidcolor\"\n                      value={this.props.dna.decorationMidcolor}\n                      type=\"range\"\n                      min=\"10\"\n                      max=\"98\"\n                      className=\"form-control-range\"\n                      id=\"middledecorationcolor\"\n                      onChange={this.HandleSliderChange.bind(this)}\n                    />\n                  </div>\n                  <div className=\"col-lg-5\">\n                    <label>\n                      <b>Sides</b>\n                      <span\n                        className=\"badge badge-dark ml-2\"\n                        id=\"outterdecorationcode\"\n                      >{this.props.dna.decorationSidescolor}</span>\n                    </label>\n                    <input\n                      name=\"decorationSidescolor\"\n                      value={this.props.dna.decorationSidescolor}\n                      type=\"range\"\n                      min=\"10\"\n                      max=\"98\"\n                      className=\"form-control-range\"\n                      id=\"outterdecorationcolor\"\n                      onChange={this.HandleSliderChange.bind(this)}\n                    />\n                  </div>\n                </div>\n                <br />\n                <label>\n                  <b>Animation</b>\n                  <span\n                    className=\"badge badge-dark ml-2\"\n                    id=\"animationname\"\n                  >{this.props.animationName}</span>\n                </label>\n                <input\n                  name=\"animation\"\n                  value={this.props.dna.animation}\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"6\"\n                  className=\"form-control-range\"\n                  id=\"animationnumber\"\n                  onChange={this.HandleSliderChange.bind(this)}\n                />\n              </div>\n            </Tab.Pane>\n          </Tab.Content>\n        </Tab.Container>\n      </div>\n    );\n  }\n}\n\nexport default PandaAttributes;\n","export const  genesToDNA=(gene)=> {\n    let dna = {\n        dnaarmleg: parseInt(gene.slice(0,2)),\n        dnaeyepatch: parseInt(gene.slice(2,4)),\n        dnainnerearfoot: parseInt(gene.slice(4,6)),\n        dnaheadbody: parseInt(gene.slice(6,8)),\n        //Pandatributes\n        dnaeyeshape: parseInt(gene.slice(8,9)),\n        dnamouthshape: parseInt(gene.slice(9,10)),\n        decorationMidcolor: parseInt(gene.slice(10,12)),\n        decorationSidescolor: parseInt(gene.slice(12,14)),\n        animation: parseInt(gene.slice(14,15)),\n        lastNum: parseInt(gene.slice(15,16)),\n    }\n    return dna;\n}\n\nexport const  epochToUTCDate=(epochTime)=> {\n    \n    let date = new Date(epochTime*1000);\n    return date.toUTCString();\n}\n\nexport  const getPanda = async (contract, accounts, tokenId) => {\n  let _pandaItem, _panda;\n\n  _panda = await contract.methods\n    .getPanda(tokenId)\n    .call({ from: accounts[0] });\n\n  _pandaItem = {\n    pandaTokenId: parseInt(tokenId),\n    mumId: parseInt(_panda.mumId),\n    dadId: parseInt(_panda.dadId),\n    birthTime: parseInt(_panda.birthTime),\n    generation: parseInt(_panda.generation),\n    genes: parseInt(_panda.genes),\n    dna: genesToDNA(_panda.genes),\n  };\n\n  return _pandaItem;\n}\n\nexport  const getPandas = async (contract, accounts) => {\n    let _pandaList = [];\n    let _pandaItem;\n\n    \n    const PandaTokenIdArray = await contract.methods\n      ._pandasOfOwner(accounts[0])\n      .call({ from: accounts[0] }); \n\n    for (let i = 0; i < PandaTokenIdArray.length; i++) {\n      _pandaItem = await getPanda(contract, accounts, parseInt(PandaTokenIdArray[i]));\n      _pandaList.push(_pandaItem);\n    }\n\n    return _pandaList;\n};\n\nexport const createPandaGen0 = (contract,accounts,dna) =>{\n  contract.methods\n  .createPandaGen0(dna)\n  .send({ from: accounts[0] }, (error, txHash) => {\n    if (error) {\n      console.log(error);\n    } \n  })\n};  \n\nexport const breed = (contract,accounts,mumTokenId, dadTokenId) =>{\n  contract.methods.breed(mumTokenId,dadTokenId)\n      .send({ from: accounts[0] }, (error, txHash) => {\n        if (error) {\n          console.log(error);\n        }\n      });\n};\n\nexport  const getMarketOffers = async (pandaContract,marketContract, accounts) => {\n  let _marketOfferList = [];\n  let _marketOfferItem;\n\n  let marketOffersArray = await marketContract.methods\n    .getAllTokenOnSale()\n    .call({ from: accounts[0] });\n\n  for (let i =0; i < marketOffersArray.length; i++) {\n    let _offer = await marketContract.methods\n      .getOffer(marketOffersArray[i])\n      .call({ from: accounts[0] });\n\n    let _panda = await pandaContract.methods\n      .getPanda(_offer.tokenId)\n      .call({ from: accounts[0] });\n\n      _marketOfferItem = {\n        seller:_offer.seller,\n        price:parseInt(_offer.price),\n        index:_offer.index,\n        tokenId:parseInt(_offer.tokenId),\n        active:_offer.active,    \n        mumId: parseInt(_panda.mumId),\n        dadId: parseInt(_panda.dadId),\n        birthTime: parseInt(_panda.birthTime),\n        generation: parseInt(_panda.generation),\n        genes: parseInt(_panda.genes),\n        dna: genesToDNA(_panda.genes),\n      };\n      if(_marketOfferItem.active===true){\n        _marketOfferList.push(_marketOfferItem);\n      }\n  }\n  return _marketOfferList;\n};\n\nexport const setApprovalForAll = async (contract,marketContract,accounts,approvalFlag) =>{\n  try{\n    \n    await contract.methods.setApprovalForAll(marketContract.options.address,approvalFlag)\n      .send({ from: accounts[0]});\n  }\n  catch(e){\n    console.log(\"Error when setting approval\",e);\n  }\n};\n\nexport const setOffer = async (marketContract,accounts,price,tokenId) =>{\n  await marketContract.methods.setOffer(price,tokenId)\n      .send({ from: accounts[0] }, (error) => {\n\n        if (error) {\n          console.log(error);\n        } \n      });\n};\n\nexport const removeOffer = async (marketContract,accounts,tokenId) =>{\n  await marketContract.methods.removeOffer(tokenId)\n      .send({ from: accounts[0] }, (error) => {\n        if (error) {\n          console.log(error);\n        } \n      });\n};\n\nexport const getActiveOfferCount = async (marketContract,accounts) =>{\n  let numberOfOffers = await marketContract.methods.getActiveOfferCount()\n      .call({ from: accounts[0] });\n  return numberOfOffers;\n};\n\nexport  const getOffer = async (marketContract, accounts, tokenId) => {\n  let _offer,_offerItem;\n\n  _offer = await marketContract.methods\n    .getOffer(tokenId)\n    .call({ from: accounts[0] });\n\n  _offerItem = {\n      seller : _offer.seller,\n      price  : parseInt(_offer.price),\n      index  : parseInt(_offer.index),\n      tokenId: parseInt(_offer.tokenId),\n      active : _offer.active,\n  };\n\n  return _offerItem;\n}\n\nexport const buyPanda = async (marketContract,accounts,tokenId,value)=>{\n  await marketContract.methods.buyPanda(tokenId).send({ from: accounts[0] ,value: value});\n}\n\nexport  const getTotalSupply = async (contract, accounts) => {\n  let _totalSupply;\n\n  _totalSupply = await contract.methods.totalSupply().call({ from: accounts[0] });\n\n  return _totalSupply;\n}","import React, { Component } from \"react\";\n\nimport { Row } from \"react-bootstrap\";\nimport { Col } from \"react-bootstrap\";\nimport { Container } from \"react-bootstrap\";\n\nimport PandaCard from \"./PandaCard\";\nimport PandaAttributes from \"./PandaAttributes\";\n\nimport { allEyeVariations, allMouthVariations } from \"../assets/js/shapes\";\nimport { allAnimations } from \"../assets/js/animations\";\n\nimport {createPandaGen0} from \"../assets/js/utils\";\n\nimport \"../assets/css/factory.css\";\n\nconst eyeShapes = allEyeVariations();\nconst mouthShapes = allMouthVariations();\nconst animations = allAnimations();\n\nconst defaultDna = {\n  dna: {\n    dnaarmleg: 51,\n    dnaeyepatch: 53,\n    dnainnerearfoot: 54,\n    dnaheadbody: 10,\n    //Pandatributes\n    dnaeyeshape: 1,\n    dnamouthshape: 1,\n    decorationMidcolor: 19,\n    decorationSidescolor: 10,\n    animation: 1,\n    lastNum: 9,\n  },\n};\n\nclass PandaFactory extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dna: {\n        dnaarmleg: 51,\n        dnaeyepatch: 53,\n        dnainnerearfoot: 54,\n        dnaheadbody: 10,\n        //Pandatributes\n        dnaeyeshape: 1,\n        dnamouthshape: 1,\n        decorationMidcolor: 19,\n        decorationSidescolor: 10,\n        animation: 1,\n        lastNum: 9,\n      },\n      isMounted:0\n    };\n  }\n\n\n  getDna = () => {\n    var dna = \"\";\n    dna += this.state.dna.dnaarmleg;\n    dna += this.state.dna.dnaeyepatch;\n    dna += this.state.dna.dnainnerearfoot;\n    dna += this.state.dna.dnaheadbody;\n    dna += this.state.dna.dnaeyeshape;\n    dna += this.state.dna.dnamouthshape;\n    dna += this.state.dna.decorationMidcolor;\n    dna += this.state.dna.decorationSidescolor;\n    dna += this.state.dna.animation;\n    dna += this.state.dna.lastNum;\n \n    return dna;\n  };\n\n  _createPandaGen0 = () => {\n    let _dna = this.getDna();\n    createPandaGen0(this.props.contract, this.props.accounts,_dna);\n  };\n\n  setDefaultPandaDna = () => {\n    this.setState({\n      dna: defaultDna.dna,\n    });\n  };\n\n  SliderChange = (_dnaProperty, _dna) => {\n    this.setState((prevState) => ({\n      dna: {\n        ...prevState.dna,\n        [_dnaProperty]: _dna,\n      },\n    }));\n  };\n\n  randomPanda = () => {\n    this.setState((prevState) => {\n      let dna = Object.assign({}, prevState.dna);\n\n      dna.dnaarmleg = Math.floor(Math.random() * 89) + 10;\n      dna.dnaeyepatch = Math.floor(Math.random() * 89) + 10;\n      dna.dnainnerearfoot = Math.floor(Math.random() * 89) + 10;\n      dna.dnaheadbody = Math.floor(Math.random() * 89) + 10;\n      //Pandatributes\n      dna.dnaeyeshape = Math.floor(Math.random() * 4) + 1;\n      dna.dnamouthshape = Math.floor(Math.random() * 4) + 1;\n      dna.decorationMidcolor = Math.floor(Math.random() * 89) + 10;\n      dna.decorationSidescolor = Math.floor(Math.random() * 89) + 10;\n      dna.animation = Math.floor(Math.random() * 6) + 1;\n      dna.lastNum = 1;\n\n      return { dna };\n    });\n  };\n\n  componentDidMount(){\n    this.setState({\n      isMounted: 1,\n    });\n  }\n\n  componentWillUnmount(){\n    this.setState({\n      isMounted: 0,\n    });\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-md-center body-title body-title-font\">\n          <div align=\"center\">\n            <h1 className=\"c-black\">Pandas Factory</h1>\n            <p className=\"c-black\">Create your custom Panda</p>\n            <br />\n            <h4 id=\"panda-created-message\"> </h4>\n          </div>\n        </Row>\n        {this.props.birthEvent.generation.toString() === \"0\" && this.state.isMounted ? \n        <Row className=\"justify-content-md-center\">\n          <h5 id=\"panda-created-message\">\n            {this.props.birthEvent.genes > 0\n              ? \"Your Panda is Alive: Owner:\" +\n              this.props.birthEvent.owner +\n              \", PandaID:\" +\n              this.props.birthEvent.PandaId +\n              \" , Genes:\" +\n              this.props.birthEvent.genes +\n              \" , DadId:\" +\n              this.props.birthEvent.dadId +\n              \" , MumId:\" +\n              this.props.birthEvent.mumId +\n              \" , Generation:\" +\n              this.props.birthEvent.generation\n              : \"\"}\n          </h5>\n        </Row>\n        : \"\"}\n       \n        <Row className=\"justify-content-md-center\">\n          <PandaCard dna={this.state.dna} \n                    mumId=\"0\"\n                    dadId=\"0\"\n                    generation=\"0\"\n                    birthTime=\"\"\n          />\n          <span className=\"space-between-elements\"/>\n          <PandaAttributes\n            dna={this.state.dna}\n            SliderChange={this.SliderChange}\n            mouthShapeName={mouthShapes[this.state.dna.dnamouthshape]}\n            eyeShapeName={eyeShapes[this.state.dna.dnaeyeshape]}\n            animationName={animations[this.state.dna.animation]}\n          />\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success m-1\"\n            id=\"default-panda-button\"\n            onClick={this.setDefaultPandaDna}\n          >\n            Default Panda\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"btn btn-success m-1\"\n            id=\"random-panda-button\"\n            onClick={this.randomPanda}\n          >\n            Random Panda\n          </button>\n          {/* </Col> */}\n          <Col md={{ span: 2, offset: 3 }}>\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              id=\"random-panda-button\"\n              onClick={this._createPandaGen0}\n            >\n              Create Panda\n            </button>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default PandaFactory;\n","import React, { Component } from \"react\";\n\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport PandaCard from \"./PandaCard\";\n\nimport {epochToUTCDate ,getPandas} from \"../assets/js/utils\";\n\nimport { Link} from 'react-router-dom';\n\nimport \"../assets/css/PandaGallery.css\"\n\nclass PandaGallery extends Component {\n  constructor() {\n    super();\n    this.state = {\n      pandaList: [],\n    };\n  }\n\n  async componentDidMount() {\n    let _pandaList = await getPandas(this.props.contract, this.props.accounts);\n\n    this.setState(() => ({\n          pandaList: _pandaList\n        }));   \n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-md-center body-title body-title-font\">\n                    <h1>My Collection</h1>\n        </Row>\n        {this.props.birthEvent.generation > 0 ? \n        <Row className=\"justify-content-md-center\">\n          <h5 id=\"panda-created-message\">\n            {this.props.birthEvent.genes > 0\n              ? \"Your Panda is Alive: Owner:\" +\n              this.props.birthEvent.owner +\n              \", PandaID:\" +\n              this.props.birthEvent.PandaId +\n              \" , Genes:\" +\n              this.props.birthEvent.genes +\n              \" , DadId:\" +\n              this.props.birthEvent.dadId +\n              \" , MumId:\" +\n              this.props.birthEvent.mumId +\n              \" , Generation:\" +\n              this.props.birthEvent.generation\n              : \"\"}\n          </h5>\n        </Row>\n        : \"\"}\n        <Row className=\"justify-content-md-center\">\n          {this.state.pandaList.map((panda) => (\n            <div key={\"div-\" + panda.pandaTokenId.toString()}>\n              <Col key={\"col-\" + panda.pandaTokenId.toString()} md={3}>\n                <Link to={\"/pandaDetail/\"+panda.pandaTokenId.toString()}>\n                  <PandaCard\n                    key={\"panda-card-\" + panda.pandaTokenId.toString()}\n                    dna={panda.dna}\n                    mumId={panda.mumId}\n                    dadId={panda.dadId}\n                    generation={panda.generation}\n                    birthTime={epochToUTCDate(panda.birthTime)}\n                    className=\"cursor-pointer\"\n                  />\n                </Link>\n              </Col>\n              <Col md={1}></Col>\n            </div>\n          ))}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default PandaGallery;\n","import React, { Component } from \"react\";\n\nimport { Container, Row, Col , Badge} from \"react-bootstrap\";\nimport PandaCard from \"./PandaCard\";\n\nimport { Link} from 'react-router-dom';\n\nimport {epochToUTCDate ,getMarketOffers} from \"../assets/js/utils\";\n\nimport \"../assets/css/PandaGallery.css\"\n\nclass PandaMarket extends Component {\n  constructor() {\n    super();\n    this.state = {\n      OfferList: [],\n      offerCount:0\n    };\n  }\n\n  async componentDidMount() {\n    let _activeOfferCount, _offerList;\n    \n    try{\n      _activeOfferCount = await this.props.marketContract.methods.getActiveOfferCount().call();\n      \n      try{      \n        if(_activeOfferCount>0){\n          _offerList =await getMarketOffers(this.props.contract,this.props.marketContract,this.props.accounts);\n\n          this.setState(() => ({\n            offerCount: _activeOfferCount,\n            OfferList: _offerList\n          }));\n        }\n      } catch(e){\n        console.log(\"No Market offers\",e);\n      }\n  \n    } catch(e){\n      console.log(\"no actove offer count--> \",e);\n    }\n  }\n  \n  render() {\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-md-center body-title body-title-font\">\n                    <h1>Market Place</h1>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          {parseInt(this.state.offerCount) === 0 ?\n          <h4 className=\"body-title-font\">There are no offers right now</h4>\n          :\"\"\n          }\n          {this.state.offerCount > 0 ?\n            this.state.OfferList.map((Offer) => (\n              <div key={\"div-\" + Offer.tokenId.toString()}>\n                <Col key={\"col-\" + Offer.tokenId.toString()} md={3}>\n                  <Link to={\"/pandaDetail/\"+Offer.tokenId.toString()}>\n                    <PandaCard\n                      key={\"panda-card-\" + Offer.tokenId.toString()}\n                      dna={Offer.dna}\n                      mumId={Offer.mumId}\n                      dadId={Offer.dadId}\n                      generation={Offer.generation}\n                      birthTime={epochToUTCDate(Offer.birthTime)}\n                    />\n                  </Link>                  \n                  <h3><Badge variant=\"secondary\">{this.props.web3.utils.fromWei(String(Offer.price), 'ether')} ETH</Badge></h3>\n                </Col>\n                <Col md={1}></Col>\n              </div>\n            ))\n          :\"\"}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default PandaMarket;\n","import React, { Component } from \"react\";\n\nimport { Modal, Button, ButtonToolbar, Row, Col } from \"react-bootstrap\";\n\nimport PandaCard from \"./PandaCard\";\n\nimport {epochToUTCDate ,getPandas} from \"../assets/js/utils\";\n\nimport \"../assets/css/breedModal.css\"\n\nclass BreedModal extends Component {\n  constructor() {\n    super();\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleHide = this.handleHide.bind(this);\n\n    this.state = {\n      pandaList: [],\n      isRedirect: 0,\n      show: false,\n    };\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n\n  handleHide() {\n    this.setState({ show: false });\n  }\n\n  async componentDidMount() {\n    let _pandaList = await getPandas(this.props.contract, this.props.accounts);\n\n    this.setState(() => ({\n          pandaList: _pandaList\n        }));\n  }\n\n  render() {\n    return (\n      <ButtonToolbar>\n        <Button className=\"btn-parent\" variant=\"warning\" onClick={this.handleShow}>\n           {\"Select \" + this.props.parenttype}\n          </Button>\n\n        <Modal\n          // {...this.props}\n          show={this.state.show}\n          onHide={this.handleHide}\n          dialogClassName=\"custom-modal\"\n          onClick={this.handleHide}         \n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-lg\">\n              {this.props.parenttype +\" Panda\"}\n              </Modal.Title>\n          </Modal.Header>\n          <Modal.Body >\n            <Row>\n            {this.state.pandaList.map((panda,index) => (\n                <div className=\"panda-col-wrapper\" key={\"div-\" + panda.pandaTokenId.toString()} value={index}>\n                  <Col key={\"col-\" + panda.pandaTokenId.toString()} md={3} onClick={()=>this.props.handleclick(index.toString(),this.props.parenttype)}>\n                    <PandaCard\n                      key={\"panda-card-\" + panda.pandaTokenId.toString()}\n                      dna={panda.dna}\n                      mumId={panda.mumId}\n                      dadId={panda.dadId}\n                      generation={panda.generation}\n                      birthTime={epochToUTCDate(panda.birthTime)}\n                      className=\"cursor-pointer\"\n                    />\n                  </Col>\n                  <Col md={1}></Col>\n                </div>\n            ))}\n            </Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={this.handleHide}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n      </ButtonToolbar>\n    );\n  }\n}\n\nexport default BreedModal;\n","import React, { Component } from \"react\";\n\nimport { Container, Row, Col ,Button} from \"react-bootstrap\";\n\nimport {Redirect} from 'react-router-dom';\n\nimport {epochToUTCDate, getPandas, breed} from \"../assets/js/utils\";\nimport PandaCard from \"./PandaCard\";\nimport BreedModal from \"./BreedModal\";\n\nimport \"../assets/css/breedRoom.css\";\n\nclass BreedRoom extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      pandaList: [],\n      MumPanda: {\n        pandaTokenId:0,\n        genes:0,\n        birthTime:0,\n        mumId:0,\n        dadId:0,\n        generation:0,\n        dna:{\n          dnaarmleg: 0,\n          dnaeyepatch: 0,\n          dnainnerearfoot: 0,\n          dnaheadbody: 0,\n          //Pandatributes\n          dnaeyeshape: 0,\n          dnamouthshape: 0,\n          decorationMidcolor: 0,\n          decorationSidescolor: 0,\n          animation: 0,\n          lastNum: 0\n        }\n      },\n      DadPanda: {\n        pandaTokenId:0,\n        genes:0,\n        birthTime:0,\n        mumId:0,\n        dadId:0,\n        generation:0,\n        dna:{\n          dnaarmleg: 0,\n          dnaeyepatch: 0,\n          dnainnerearfoot: 0,\n          dnaheadbody: 0,\n          //Pandatributes\n          dnaeyeshape: 0,\n          dnamouthshape: 0,\n          decorationMidcolor: 0,\n          decorationSidescolor: 0,\n          animation: 0,\n          lastNum: 0\n        }\n      },\n      isRedirect:0,\n      modalShow:true,\n      mumPandaShow:0,\n      dadPandaShow:0\n    };\n  }\n\n  handleClick = (index,parentType) => {\n\n    if(parentType===\"mum\"){\n      this.setState(() => ({\n        MumPanda: this.state.pandaList[index],\n        mumPandaShow: 1\n      }));\n    }else{\n      this.setState(() => ({\n        DadPanda: this.state.pandaList[index],\n        dadPandaShow:1\n      }));\n    }\n  }\n\n  _Breed=  ()=>  {\n    if(this.state.MumPanda.pandaTokenId === this.state.DadPanda.pandaTokenId){\n      alert(\"Dad and Mum have to be different\");\n    }else{\n      breed(this.props.contract, this.props.accounts,this.state.MumPanda.pandaTokenId,this.state.DadPanda.pandaTokenId)\n      this.setState(() => ({\n          isRedirect: 1\n        }));  \n    }\n  }\n\n  async componentDidMount() {\n    let _pandaList = await getPandas(this.props.contract, this.props.accounts);\n    this.setState(() => ({\n          pandaList: _pandaList,\n          MumPanda: _pandaList[0],\n          DadPanda: _pandaList[0]\n        }));\n    \n  }\n\n  componentWillUnmount(){\n    this.setState.isRedirect=0;\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.state.isRedirect>0 ? <Redirect to=\"/gallery\" />: \"\"}\n        <Row className=\"justify-content-md-center body-title body-title-font\">\n          <div align=\"center\">\n            <h1 className=\"c-black\">Breeding Room</h1>\n            <p className=\"c-black\">Please give the pandas some privacy</p>\n            <br />\n            <h4 id=\"panda-created-message\"> </h4>\n          </div>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md={{span:5}}>\n            <BreedModal contract ={this.props.contract} accounts={this.props.accounts} handleclick={this.handleClick} parenttype=\"mum\"/>\n          </Col>\n          <Col md={{span:2}}></Col>\n          <Col md={{span:5}}>\n            <BreedModal contract ={this.props.contract} accounts={this.props.accounts} handleclick={this.handleClick} parenttype=\"dad\"/>\n          </Col>\n        </Row>\n        {(() => {\n            if (this.state.pandaList.length > 1) {\n              return (\n                    <Row className=\"justify-content-md-center\">\n                      <Col md={{span:5}}>\n                      {this.state.mumPandaShow===1 ? \n                        <PandaCard\n                        key={\"panda-card-mum\" + this.state.MumPanda.genes.toString()}\n                        dna={this.state.MumPanda.dna}\n                        mumId={this.state.MumPanda.mumId}\n                        dadId={this.state.MumPanda.dadId}\n                        generation={this.state.MumPanda.generation}\n                        birthTime={epochToUTCDate(this.state.MumPanda.birthTime)}\n                        />\n                      : <div className=\"empty-box body-title-font\">Pick Mum</div>}                        \n                      </Col>\n                      <Col md={{span:2}}>\n                        <Button className=\"scale vertical-center\" id=\"btn-breed\" onClick={this._Breed}>BREED</Button>\n                      </Col>\n                      <Col md={{span:5}}>\n                        {this.state.dadPandaShow===1 ?\n                        <PandaCard\n                        key={\"panda-card-mum\" + this.state.DadPanda.genes.toString()}\n                        dna={this.state.DadPanda.dna}\n                        mumId={this.state.DadPanda.mumId}\n                        dadId={this.state.DadPanda.dadId}\n                        generation={this.state.DadPanda.generation}\n                        birthTime={epochToUTCDate(this.state.DadPanda.birthTime)}\n                      />\n                      : <div className=\"empty-box body-title-font\">Pick Dad</div>}\n                      </Col>\n                    </Row>\n              )\n            }else {\n              return (\n                <Row className=\"justify-content-md-center\">\n                  <h3> You need 2 pandas to be able to breed</h3>\n                </Row>\n              )\n            }\n        })()}\n      </Container>\n    );\n  }\n}\n\nexport default BreedRoom;\n","export default __webpack_public_path__ + \"static/media/PandaGallery.1ec54226.jpg\";","import React, { Component } from 'react';\nimport { Container, Row} from 'react-bootstrap';\n\nimport PandaGalleryImage from '../assets/img/PandaGallery.jpg'\n\nimport \"../assets/css/home.css\";\n\nclass Home extends Component {\n    state = {  }\n    render() { \n        return (  \n            <Container fluid >\n                <Row className=\"justify-content-md-center body-title\">\n                    <h1>Collect , breed and trade Crypto Panda collectables</h1>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n                    <img className=\"gradient-border\" id=\"home-img\" src={PandaGalleryImage} alt=\"\"/>\n                </Row>\n            </Container>\n        );\n    }\n}\n \nexport default Home;","import React, { Component } from 'react';\nimport { Container, Row ,Button, InputGroup,FormControl, Badge} from \"react-bootstrap\";\nimport PandaCard from \"./PandaCard\";\nimport {epochToUTCDate ,getPanda, setOffer, removeOffer,getOffer, setApprovalForAll , buyPanda} from \"../assets/js/utils\";\nimport \"../assets/css/pandaDetail.css\";\n\nclass PandaDetail extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            pandaItem:null,\n            amount:0,\n            offer:{\n                seller: \"\",\n                price: 0, \n                index: 0, \n                tokenId: 0, \n                active: false\n            },\n            pandaOwner:0,\n            IsMarketOpperator:false\n        };\n    }\n\n    async componentDidMount(){\n        let _pandaItem,_offer,_ownerOf,_isApprovedForAll;\n\n        try{\n            _isApprovedForAll = await this.props.contract.methods.isApprovedForAll(this.props.accounts[0],this.props.marketContract.options.address).call();\n            this.setState(() => ({\n              IsMarketOpperator: _isApprovedForAll   \n            }));\n          } catch(e){\n            console.log(\"Not approved for all\",e);\n          }\n\n        try{\n            _pandaItem = await getPanda(this.props.contract, this.props.accounts,this.props.match.params.id);\n        } catch(e){\n            console.log(\"No Pandas\");\n        }\n        \n        try{\n            _offer = await getOffer(this.props.marketContract, this.props.accounts,this.props.match.params.id);\n            if(_offer.active===false){\n                _offer = undefined;\n            }\n        } catch(e){\n            console.log(\"No offer\");\n        }\n\n        try{\n            _ownerOf=await this.props.contract.methods.ownerOf(this.props.match.params.id).call({ from: this.props.accounts[0] }); \n        } catch(e){\n            console.log(\"Error: executing OwnerOf\");\n        }\n\n        this.setState(() => ({\n            pandaItem: _pandaItem,\n            offer: _offer,\n            pandaOwner: _ownerOf\n          }));\n    }\n\n    handleSubmit= async (event) => {\n        event.preventDefault();\n        if(this.state.offer===undefined){\n            await setOffer(this.props.marketContract, this.props.accounts,this.props.web3.utils.toWei(String(this.state.amount)),this.props.match.params.id);\n        }else if(this.props.accounts[0]===this.state.offer.seller){\n            await removeOffer(this.props.marketContract, this.props.accounts,this.props.match.params.id);\n        }else{ \n            await buyPanda(this.props.marketContract, this.props.accounts,this.props.match.params.id,this.state.offer.price);\n        }       \n    }\n\n    handleChange= (event) => {\n        event.preventDefault();\n        event.persist();\n        this.setState(() => ({\n            [event.target.name]: parseInt(event.target.value)\n          }));\n    }\n\n    handleRemove =  async (event) =>{\n        event.preventDefault();\n        await removeOffer(this.props.marketContract, this.props.accounts,this.props.match.params.id);\n    }\n\n    _setApprovalForAll =  async ()=>  {\n        let _isApprovedForAll;\n        \n        setApprovalForAll(this.props.contract,this.props.marketContract,this.props.accounts,true);\n       \n        _isApprovedForAll = await this.props.contract.methods.isApprovedForAll(this.props.accounts[0],this.props.marketContract.options.address).call();\n       \n        this.setState(() => ({\n          IsMarketOpperator: _isApprovedForAll\n        }));\n    }\n\n    render() { \n        return (  \n            <Container fluid>\n                <Row className=\"justify-content-md-center body-title body-title-font\">\n                    <h1>Set your offer</h1>\n                </Row>\n                {this.state.pandaItem != null ?\n                    <Row className=\"justify-content-md-center\">\n                        <PandaCard\n                            key={\"panda-card-\" + this.state.pandaItem.pandaTokenId.toString()}\n                            dna={this.state.pandaItem.dna}\n                            mumId={this.state.pandaItem.mumId}\n                            dadId={this.state.pandaItem.dadId}\n                            generation={this.state.pandaItem.generation}\n                            birthTime={epochToUTCDate(this.state.pandaItem.birthTime)}\n                            className=\"cursor-pointer\"\n                        />\n                        <span className=\"space-between-elements\"/>\n                        <div>\n                            {this.state.offer !== undefined ?\n                            <div>\n                                <h4><Badge variant=\"secondary\">Owner: {this.state.offer.seller}</Badge></h4>\n                                <h4><Badge variant=\"secondary\">Price: {this.props.web3.utils.fromWei(String(this.state.offer.price), 'ether')} ETH</Badge></h4>\n                            </div>\n                            :\"\"}\n                            {this.state.IsMarketOpperator === false & this.state.pandaOwner ==this.props.accounts[0] ?\n                                        <Button id=\"btn-permissions\" onClick={this._setApprovalForAll}>Delegate Operator rights</Button>\n                            :\"\"}\n                            <form id=\"panda-detail-offer\" onSubmit={this.handleSubmit}>\n                                {this.state.offer == undefined ?\n                                    <div>\n                                        {this.state.pandaOwner ==this.props.accounts[0]?\n                                            <div>\n                                            <InputGroup className=\"mb-3\">\n                                                <FormControl aria-label=\"Amount\" name=\"amount\" onChange={this.handleChange}/>\n                                                <InputGroup.Append>\n                                                    <InputGroup.Text>ETH</InputGroup.Text>\n                                                </InputGroup.Append>\n                                            </InputGroup>\n                                            <Button variant=\"success\" type=\"submit\">Sell</Button>\n                                            </div>\n                                        :\"\"}\n                                    </div>   \n                                :\n                                    <div>\n                                        <span className=\"space-between-elements\"/>\n                                        {this.props.accounts[0]==this.state.offer.seller?\n                                        <Button variant=\"danger\" type=\"submit\">Remove Offer</Button>\n                                        :\n                                        <Button variant=\"success\" type=\"submit\">Buy Me</Button>\n                                        }\n                                    </div>\n                                }\n                            </form>\n                        </div>\n                    </Row>\n                :\"\"}\n            </Container>\n        );\n    }\n}\n \nexport default PandaDetail;\n","import React, { Component } from 'react';\n\nimport PandaFactory from \"./PandaFactory\";\nimport PandaGallery from \"./PandaGallery\";\nimport PandaMarket from \"./PandaMarket\";\nimport BreedRoom from \"./BreedRoom\";\nimport Home from \"./Home\";\nimport PandaDetail from \"./PandaDetail\";\n\nimport { Route,Switch} from 'react-router-dom'\n\nimport \"../assets/css/body.css\";\n\nclass Body extends Component {\n    constructor() {\n        super();\n        this.state = {\n          BirthEvent: {\n            owner: 0,\n            PandaId: 0,\n            mumId: 0,\n            dadId: 0,\n            genes: 0,\n            generation:0\n          },\n          MarketTransaction:{\n            TxType:\"\",\n            owner:0, \n            tokenId:0\n          },\n          TransferEvent:{\n              from:0,\n              to:0,\n              tokenId:0\n          }\n        };\n      }\n\n    componentDidMount() {\n        this.eventBirth();\n        this.MarketTransactionEvent();\n    }\n\n    eventBirth = () => {\n        this.props.contract.events.Birth({}, (error, event) => {\n            if (error) {\n            console.log(error);\n            } else {\n            this.setState((prevState) => ({\n                BirthEvent: {\n                ...prevState.BirthEvent,\n                owner: event.returnValues._owner,\n                PandaId: event.returnValues.PandaId,\n                mumId: event.returnValues.mumId,\n                dadId: event.returnValues.dadId,\n                genes: event.returnValues.genes,\n                generation: event.returnValues.generation\n                },\n            }));\n            }\n        });\n    };\n\n\n    MarketTransactionEvent = () => {\n        this.props.marketContract.events.MarketTransaction({}, (error, event) => {\n            if (error) {\n            console.log(error);\n            } else {\n            this.setState((prevState) => ({\n                MarketTransaction: {\n                ...prevState.MarketTransaction,\n                TxType: event.returnValues.TxType,\n                owner: event.returnValues.owner,\n                tokenId: event.returnValues.tokenId\n                },\n            }));\n            }\n        });\n    };\n\n    TransferEvent = () => {\n        this.props.contract.events.Transfer({}, (error, event) => {\n            if (error) {\n            console.log(error);\n            } else {\n            this.setState((prevState) => ({\n                TransferEvent: {\n                ...prevState.TransferEvent,\n                from: event.returnValues.from,\n                to: event.returnValues.to,\n                tokenId: event.returnValues.tokenId\n                },\n            }));\n            }\n        });\n    };\n\n    render() { \n        return ( \n            <div  className=\"app-body\">\n                <Switch>\n                    <Route path='/' exact component={Home}/>\n                    <Route path='/factory' component={()=> <PandaFactory contract ={this.props.contract} accounts={this.props.accounts} birthEvent={this.state.BirthEvent}/>}/>\n                    <Route path='/gallery'component={() =>  <PandaGallery contract ={this.props.contract} accounts={this.props.accounts} birthEvent={this.state.BirthEvent}/>}/>\n                    <Route path='/breed'component={() =>  <BreedRoom contract ={this.props.contract} accounts={this.props.accounts} birthEvent={this.state.BirthEvent}/>}/>\n                    <Route path='/market'component={() =>  <PandaMarket contract ={this.props.contract} accounts={this.props.accounts} marketContract={this.props.marketContract} web3 = {this.props.web3}/>}/>\n                    <Route path='/pandaDetail/:id' component={({match}) => <PandaDetail contract ={this.props.contract} accounts={this.props.accounts} marketContract={this.props.marketContract} match={match} marketTransactionEvent={this.state.MarketTransaction} web3 = {this.props.web3} TransferEvent = {this.state.TransferEvent}/>}/>\n                </Switch>\n            </div>\n         );\n    }\n}\n \nexport default Body;","import React, { Component } from \"react\";\n\nimport { Container, Row } from \"react-bootstrap\";\n\nclass Footer extends Component {\n  state = {};\n  render() {\n    return (\n      <Container fluid>\n          <br/>\n        <Row className=\"justify-content-md-center\">\n            <p><b>© 2020-2020: </b> by Ismael Oltra Barrasa for Ivan on Tech Bootcamp project</p>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport PandaContract from \"./contracts/PandaContract.json\";\nimport PandaProxy from \"./contracts/PandaProxy.json\";\nimport PandaMarketPlaceContract from \"./contracts/PandaMarketPlace.json\";\nimport PandaMarketPlaceProxy from \"./contracts/PandaMarketPlaceProxy.json\";\n\nimport getWeb3 from \"./getWeb3\";\n\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport Footer from \"./components/Footer\";\n\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nimport \"./App.css\";\n\n\n\nclass App extends Component {\n  state = {\n    storageValue: 0,\n    web3: null,\n    accounts: null,\n    contract: null,\n    marketContract:null,\n  };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = PandaProxy.networks[networkId];\n      const instance = new web3.eth.Contract(\n        PandaContract.abi,\n        deployedNetwork && deployedNetwork.address\n      );\n      const marketDeployedNetwork = PandaMarketPlaceProxy.networks[networkId];\n      const marketInstance = new web3.eth.Contract(\n        PandaMarketPlaceContract.abi,\n        marketDeployedNetwork && marketDeployedNetwork.address\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance , marketContract: marketInstance }, this.runExample);\n\n      // Handle page reload on Network or user account changes\n      window.ethereum.on('chainChanged', chainId => {\n        document.location.reload()\n      })\n      window.ethereum.on('accountsChanged', () => {\n        document.location.reload()\n      })\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      console.error(error);\n    }\n  };\n\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header contract ={this.state.contract} accounts={this.state.accounts}/>\n          <Body contract ={this.state.contract} accounts={this.state.accounts} marketContract = {this.state.marketContract} web3 = {this.state.web3}/>\n          <Footer/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}