{"ast":null,"code":"import _regeneratorRuntime from\"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Container,Row,Col}from\"react-bootstrap\";import PandaCard from\"./PandaCard\";import{epochToUTCDate,getPandas}from\"../assets/js/utils\";import{Link}from'react-router-dom';import\"../assets/css/PandaGallery.css\";var PandaGallery=/*#__PURE__*/function(_Component){_inherits(PandaGallery,_Component);var _super=_createSuper(PandaGallery);function PandaGallery(){var _this;_classCallCheck(this,PandaGallery);_this=_super.call(this);_this.state={pandaList:[]};return _this;}_createClass(PandaGallery,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _pandaList;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getPandas(this.props.contract,this.props.accounts);case 2:_pandaList=_context.sent;this.setState(function(){return{pandaList:_pandaList};});case 4:case\"end\":return _context.stop();}}},_callee,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center body-title body-title-font\"},/*#__PURE__*/React.createElement(\"h1\",null,\"My Collection\")),this.props.birthEvent.generation>0?/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(\"h5\",{id:\"panda-created-message\"},this.props.birthEvent.genes>0?\"Your Panda is Alive: Owner:\"+this.props.birthEvent.owner+\", PandaID:\"+this.props.birthEvent.PandaId+\" , Genes:\"+this.props.birthEvent.genes+\" , DadId:\"+this.props.birthEvent.dadId+\" , MumId:\"+this.props.birthEvent.mumId+\" , Generation:\"+this.props.birthEvent.generation:\"\")):\"\",/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},this.state.pandaList.map(function(panda){return/*#__PURE__*/React.createElement(\"div\",{key:\"div-\"+panda.pandaTokenId.toString()},/*#__PURE__*/React.createElement(Col,{key:\"col-\"+panda.pandaTokenId.toString(),md:3},/*#__PURE__*/React.createElement(Link,{to:\"/pandaDetail/\"+panda.pandaTokenId.toString()},/*#__PURE__*/React.createElement(PandaCard,{key:\"panda-card-\"+panda.pandaTokenId.toString(),dna:panda.dna,mumId:panda.mumId,dadId:panda.dadId,generation:panda.generation,birthTime:epochToUTCDate(panda.birthTime),className:\"cursor-pointer\"}))),/*#__PURE__*/React.createElement(Col,{md:1}));})));}}]);return PandaGallery;}(Component);export default PandaGallery;","map":{"version":3,"sources":["/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/PandaGallery.jsx"],"names":["React","Component","Container","Row","Col","PandaCard","epochToUTCDate","getPandas","Link","PandaGallery","state","pandaList","props","contract","accounts","_pandaList","setState","birthEvent","generation","genes","owner","PandaId","dadId","mumId","map","panda","pandaTokenId","toString","dna","birthTime"],"mappings":"2iCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,SAAT,CAAoBC,GAApB,CAAyBC,GAAzB,KAAoC,iBAApC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAEA,OAAQC,cAAR,CAAwBC,SAAxB,KAAwC,oBAAxC,CAEA,OAASC,IAAT,KAAoB,kBAApB,CAEA,MAAO,gCAAP,C,GAEMC,CAAAA,Y,4GACJ,uBAAc,8CACZ,wBACA,MAAKC,KAAL,CAAa,CACXC,SAAS,CAAE,EADA,CAAb,CAFY,aAKb,C,4TAGwBJ,CAAAA,SAAS,CAAC,KAAKK,KAAL,CAAWC,QAAZ,CAAsB,KAAKD,KAAL,CAAWE,QAAjC,C,QAA5BC,U,eAEJ,KAAKC,QAAL,CAAc,iBAAO,CACfL,SAAS,CAAEI,UADI,CAAP,EAAd,E,+MAKO,CACP,mBACE,oBAAC,SAAD,EAAW,KAAK,KAAhB,eACE,oBAAC,GAAD,EAAK,SAAS,CAAC,sDAAf,eACY,8CADZ,CADF,CAIG,KAAKH,KAAL,CAAWK,UAAX,CAAsBC,UAAtB,CAAmC,CAAnC,cACD,oBAAC,GAAD,EAAK,SAAS,CAAC,2BAAf,eACE,0BAAI,EAAE,CAAC,uBAAP,EACG,KAAKN,KAAL,CAAWK,UAAX,CAAsBE,KAAtB,CAA8B,CAA9B,CACG,8BACF,KAAKP,KAAL,CAAWK,UAAX,CAAsBG,KADpB,CAEF,YAFE,CAGF,KAAKR,KAAL,CAAWK,UAAX,CAAsBI,OAHpB,CAIF,WAJE,CAKF,KAAKT,KAAL,CAAWK,UAAX,CAAsBE,KALpB,CAMF,WANE,CAOF,KAAKP,KAAL,CAAWK,UAAX,CAAsBK,KAPpB,CAQF,WARE,CASF,KAAKV,KAAL,CAAWK,UAAX,CAAsBM,KATpB,CAUF,gBAVE,CAWF,KAAKX,KAAL,CAAWK,UAAX,CAAsBC,UAZvB,CAaG,EAdN,CADF,CADC,CAmBC,EAvBJ,cAwBE,oBAAC,GAAD,EAAK,SAAS,CAAC,2BAAf,EACG,KAAKR,KAAL,CAAWC,SAAX,CAAqBa,GAArB,CAAyB,SAACC,KAAD,qBACxB,2BAAK,GAAG,CAAE,OAASA,KAAK,CAACC,YAAN,CAAmBC,QAAnB,EAAnB,eACE,oBAAC,GAAD,EAAK,GAAG,CAAE,OAASF,KAAK,CAACC,YAAN,CAAmBC,QAAnB,EAAnB,CAAkD,EAAE,CAAE,CAAtD,eACE,oBAAC,IAAD,EAAM,EAAE,CAAE,gBAAgBF,KAAK,CAACC,YAAN,CAAmBC,QAAnB,EAA1B,eACE,oBAAC,SAAD,EACE,GAAG,CAAE,cAAgBF,KAAK,CAACC,YAAN,CAAmBC,QAAnB,EADvB,CAEE,GAAG,CAAEF,KAAK,CAACG,GAFb,CAGE,KAAK,CAAEH,KAAK,CAACF,KAHf,CAIE,KAAK,CAAEE,KAAK,CAACH,KAJf,CAKE,UAAU,CAAEG,KAAK,CAACP,UALpB,CAME,SAAS,CAAEZ,cAAc,CAACmB,KAAK,CAACI,SAAP,CAN3B,CAOE,SAAS,CAAC,gBAPZ,EADF,CADF,CADF,cAcE,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,EAdF,CADwB,EAAzB,CADH,CAxBF,CADF,CA+CD,C,0BAhEwB5B,S,EAmE3B,cAAeQ,CAAAA,YAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport PandaCard from \"./PandaCard\";\n\nimport {epochToUTCDate ,getPandas} from \"../assets/js/utils\";\n\nimport { Link} from 'react-router-dom';\n\nimport \"../assets/css/PandaGallery.css\"\n\nclass PandaGallery extends Component {\n  constructor() {\n    super();\n    this.state = {\n      pandaList: [],\n    };\n  }\n\n  async componentDidMount() {\n    let _pandaList = await getPandas(this.props.contract, this.props.accounts);\n\n    this.setState(() => ({\n          pandaList: _pandaList\n        }));   \n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-md-center body-title body-title-font\">\n                    <h1>My Collection</h1>\n        </Row>\n        {this.props.birthEvent.generation > 0 ? \n        <Row className=\"justify-content-md-center\">\n          <h5 id=\"panda-created-message\">\n            {this.props.birthEvent.genes > 0\n              ? \"Your Panda is Alive: Owner:\" +\n              this.props.birthEvent.owner +\n              \", PandaID:\" +\n              this.props.birthEvent.PandaId +\n              \" , Genes:\" +\n              this.props.birthEvent.genes +\n              \" , DadId:\" +\n              this.props.birthEvent.dadId +\n              \" , MumId:\" +\n              this.props.birthEvent.mumId +\n              \" , Generation:\" +\n              this.props.birthEvent.generation\n              : \"\"}\n          </h5>\n        </Row>\n        : \"\"}\n        <Row className=\"justify-content-md-center\">\n          {this.state.pandaList.map((panda) => (\n            <div key={\"div-\" + panda.pandaTokenId.toString()}>\n              <Col key={\"col-\" + panda.pandaTokenId.toString()} md={3}>\n                <Link to={\"/pandaDetail/\"+panda.pandaTokenId.toString()}>\n                  <PandaCard\n                    key={\"panda-card-\" + panda.pandaTokenId.toString()}\n                    dna={panda.dna}\n                    mumId={panda.mumId}\n                    dadId={panda.dadId}\n                    generation={panda.generation}\n                    birthTime={epochToUTCDate(panda.birthTime)}\n                    className=\"cursor-pointer\"\n                  />\n                </Link>\n              </Col>\n              <Col md={1}></Col>\n            </div>\n          ))}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default PandaGallery;\n"]},"metadata":{},"sourceType":"module"}