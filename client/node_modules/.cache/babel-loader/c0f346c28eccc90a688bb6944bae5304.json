{"ast":null,"code":"var _jsxFileName = \"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/BreedRoom.jsx\";\nimport React, { Component } from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom';\nimport { epochToUTCDate, getPandas, breed } from \"../assets/js/utils\";\nimport PandaCard from \"./PandaCard\";\nimport BreedModal from \"./BreedModal\";\nimport \"../assets/css/breedRoom.css\";\n\nclass BreedRoom extends Component {\n  constructor() {\n    super();\n\n    this.handleClick = (index, parentType) => {\n      if (parentType === \"mum\") {\n        this.setState(() => ({\n          MumPanda: this.state.pandaList[index],\n          mumPandaShow: 1\n        }));\n      } else {\n        this.setState(() => ({\n          DadPanda: this.state.pandaList[index],\n          dadPandaShow: 1\n        }));\n      }\n    };\n\n    this._Breed = () => {\n      if (this.state.MumPanda.pandaTokenId === this.state.DadPanda.pandaTokenId) {\n        alert(\"Dad and Mum have to be different\");\n      } else {\n        breed(this.props.contract, this.props.accounts, this.state.MumPanda.pandaTokenId, this.state.DadPanda.pandaTokenId);\n        this.setState(() => ({\n          isRedirect: 1\n        }));\n      }\n    };\n\n    this.state = {\n      pandaList: [],\n      MumPanda: {\n        pandaTokenId: 0,\n        genes: 0,\n        birthTime: 0,\n        mumId: 0,\n        dadId: 0,\n        generation: 0,\n        dna: {\n          dnaarmleg: 0,\n          dnaeyepatch: 0,\n          dnainnerearfoot: 0,\n          dnaheadbody: 0,\n          //Pandatributes\n          dnaeyeshape: 0,\n          dnamouthshape: 0,\n          decorationMidcolor: 0,\n          decorationSidescolor: 0,\n          animation: 0,\n          lastNum: 0\n        }\n      },\n      DadPanda: {\n        pandaTokenId: 0,\n        genes: 0,\n        birthTime: 0,\n        mumId: 0,\n        dadId: 0,\n        generation: 0,\n        dna: {\n          dnaarmleg: 0,\n          dnaeyepatch: 0,\n          dnainnerearfoot: 0,\n          dnaheadbody: 0,\n          //Pandatributes\n          dnaeyeshape: 0,\n          dnamouthshape: 0,\n          decorationMidcolor: 0,\n          decorationSidescolor: 0,\n          animation: 0,\n          lastNum: 0\n        }\n      },\n      isRedirect: 0,\n      modalShow: true,\n      mumPandaShow: 0,\n      dadPandaShow: 0\n    };\n  }\n\n  async componentDidMount() {\n    let _pandaList = await getPandas(this.props.contract, this.props.accounts);\n\n    this.setState(() => ({\n      pandaList: _pandaList,\n      MumPanda: _pandaList[0],\n      DadPanda: _pandaList[0]\n    }));\n  }\n\n  componentWillUnmount() {\n    this.setState.isRedirect = 0;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, this.state.isRedirect > 0 ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/gallery\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 36\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center body-title body-title-font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"c-black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"Breeding Room\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"c-black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"Please give the pandas some privacy\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      id: \"panda-created-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \" \"))), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: {\n        span: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BreedModal, {\n      contract: this.props.contract,\n      accounts: this.props.accounts,\n      handleclick: this.handleClick,\n      parenttype: \"mum\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: {\n        span: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      md: {\n        span: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BreedModal, {\n      contract: this.props.contract,\n      accounts: this.props.accounts,\n      handleclick: this.handleClick,\n      parenttype: \"dad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }))), (() => {\n      if (this.state.pandaList.length > 1) {\n        return /*#__PURE__*/React.createElement(Row, {\n          className: \"justify-content-md-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: {\n            span: 5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 23\n          }\n        }, this.state.mumPandaShow === 1 ? /*#__PURE__*/React.createElement(PandaCard, {\n          key: \"panda-card-mum\" + this.state.MumPanda.genes.toString(),\n          dna: this.state.MumPanda.dna,\n          mumId: this.state.MumPanda.mumId,\n          dadId: this.state.MumPanda.dadId,\n          generation: this.state.MumPanda.generation,\n          birthTime: epochToUTCDate(this.state.MumPanda.birthTime),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }\n        }) : /*#__PURE__*/React.createElement(\"div\", {\n          className: \"empty-box body-title-font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }\n        }, \"Pick Mum\")), /*#__PURE__*/React.createElement(Col, {\n          md: {\n            span: 2\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          className: \"scale vertical-center\",\n          id: \"btn-breed\",\n          onClick: this._Breed,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }\n        }, \"BREED\")), /*#__PURE__*/React.createElement(Col, {\n          md: {\n            span: 5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 23\n          }\n        }, this.state.dadPandaShow === 1 ? /*#__PURE__*/React.createElement(PandaCard, {\n          key: \"panda-card-mum\" + this.state.DadPanda.genes.toString(),\n          dna: this.state.DadPanda.dna,\n          mumId: this.state.DadPanda.mumId,\n          dadId: this.state.DadPanda.dadId,\n          generation: this.state.DadPanda.generation,\n          birthTime: epochToUTCDate(this.state.DadPanda.birthTime),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }\n        }) : /*#__PURE__*/React.createElement(\"div\", {\n          className: \"empty-box body-title-font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }\n        }, \"Pick Dad\")));\n      } else {\n        return /*#__PURE__*/React.createElement(Row, {\n          className: \"justify-content-md-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 19\n          }\n        }, \" You need 2 pandas to be able to breed\"));\n      }\n    })());\n  }\n\n}\n\nexport default BreedRoom;","map":{"version":3,"sources":["/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/BreedRoom.jsx"],"names":["React","Component","Container","Row","Col","Button","Redirect","epochToUTCDate","getPandas","breed","PandaCard","BreedModal","BreedRoom","constructor","handleClick","index","parentType","setState","MumPanda","state","pandaList","mumPandaShow","DadPanda","dadPandaShow","_Breed","pandaTokenId","alert","props","contract","accounts","isRedirect","genes","birthTime","mumId","dadId","generation","dna","dnaarmleg","dnaeyepatch","dnainnerearfoot","dnaheadbody","dnaeyeshape","dnamouthshape","decorationMidcolor","decorationSidescolor","animation","lastNum","modalShow","componentDidMount","_pandaList","componentWillUnmount","render","span","length","toString"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Container, Row, Col ,Button} from \"react-bootstrap\";\n\nimport {Redirect} from 'react-router-dom';\n\nimport {epochToUTCDate, getPandas, breed} from \"../assets/js/utils\";\nimport PandaCard from \"./PandaCard\";\nimport BreedModal from \"./BreedModal\";\n\nimport \"../assets/css/breedRoom.css\";\n\nclass BreedRoom extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      pandaList: [],\n      MumPanda: {\n        pandaTokenId:0,\n        genes:0,\n        birthTime:0,\n        mumId:0,\n        dadId:0,\n        generation:0,\n        dna:{\n          dnaarmleg: 0,\n          dnaeyepatch: 0,\n          dnainnerearfoot: 0,\n          dnaheadbody: 0,\n          //Pandatributes\n          dnaeyeshape: 0,\n          dnamouthshape: 0,\n          decorationMidcolor: 0,\n          decorationSidescolor: 0,\n          animation: 0,\n          lastNum: 0\n        }\n      },\n      DadPanda: {\n        pandaTokenId:0,\n        genes:0,\n        birthTime:0,\n        mumId:0,\n        dadId:0,\n        generation:0,\n        dna:{\n          dnaarmleg: 0,\n          dnaeyepatch: 0,\n          dnainnerearfoot: 0,\n          dnaheadbody: 0,\n          //Pandatributes\n          dnaeyeshape: 0,\n          dnamouthshape: 0,\n          decorationMidcolor: 0,\n          decorationSidescolor: 0,\n          animation: 0,\n          lastNum: 0\n        }\n      },\n      isRedirect:0,\n      modalShow:true,\n      mumPandaShow:0,\n      dadPandaShow:0\n    };\n  }\n\n  handleClick = (index,parentType) => {\n\n    if(parentType===\"mum\"){\n      this.setState(() => ({\n        MumPanda: this.state.pandaList[index],\n        mumPandaShow: 1\n      }));\n    }else{\n      this.setState(() => ({\n        DadPanda: this.state.pandaList[index],\n        dadPandaShow:1\n      }));\n    }\n  }\n\n  _Breed=  ()=>  {\n    if(this.state.MumPanda.pandaTokenId === this.state.DadPanda.pandaTokenId){\n      alert(\"Dad and Mum have to be different\");\n    }else{\n      breed(this.props.contract, this.props.accounts,this.state.MumPanda.pandaTokenId,this.state.DadPanda.pandaTokenId)\n      this.setState(() => ({\n          isRedirect: 1\n        }));  \n    }\n  }\n\n  async componentDidMount() {\n    let _pandaList = await getPandas(this.props.contract, this.props.accounts);\n    this.setState(() => ({\n          pandaList: _pandaList,\n          MumPanda: _pandaList[0],\n          DadPanda: _pandaList[0]\n        }));\n    \n  }\n\n  componentWillUnmount(){\n    this.setState.isRedirect=0;\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.state.isRedirect>0 ? <Redirect to=\"/gallery\" />: \"\"}\n        <Row className=\"justify-content-md-center body-title body-title-font\">\n          <div align=\"center\">\n            <h1 className=\"c-black\">Breeding Room</h1>\n            <p className=\"c-black\">Please give the pandas some privacy</p>\n            <br />\n            <h4 id=\"panda-created-message\"> </h4>\n          </div>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md={{span:5}}>\n            <BreedModal contract ={this.props.contract} accounts={this.props.accounts} handleclick={this.handleClick} parenttype=\"mum\"/>\n          </Col>\n          <Col md={{span:2}}></Col>\n          <Col md={{span:5}}>\n            <BreedModal contract ={this.props.contract} accounts={this.props.accounts} handleclick={this.handleClick} parenttype=\"dad\"/>\n          </Col>\n        </Row>\n        {(() => {\n            if (this.state.pandaList.length > 1) {\n              return (\n                    <Row className=\"justify-content-md-center\">\n                      <Col md={{span:5}}>\n                      {this.state.mumPandaShow===1 ? \n                        <PandaCard\n                        key={\"panda-card-mum\" + this.state.MumPanda.genes.toString()}\n                        dna={this.state.MumPanda.dna}\n                        mumId={this.state.MumPanda.mumId}\n                        dadId={this.state.MumPanda.dadId}\n                        generation={this.state.MumPanda.generation}\n                        birthTime={epochToUTCDate(this.state.MumPanda.birthTime)}\n                        />\n                      : <div className=\"empty-box body-title-font\">Pick Mum</div>}                        \n                      </Col>\n                      <Col md={{span:2}}>\n                        <Button className=\"scale vertical-center\" id=\"btn-breed\" onClick={this._Breed}>BREED</Button>\n                      </Col>\n                      <Col md={{span:5}}>\n                        {this.state.dadPandaShow===1 ?\n                        <PandaCard\n                        key={\"panda-card-mum\" + this.state.DadPanda.genes.toString()}\n                        dna={this.state.DadPanda.dna}\n                        mumId={this.state.DadPanda.mumId}\n                        dadId={this.state.DadPanda.dadId}\n                        generation={this.state.DadPanda.generation}\n                        birthTime={epochToUTCDate(this.state.DadPanda.birthTime)}\n                      />\n                      : <div className=\"empty-box body-title-font\">Pick Dad</div>}\n                      </Col>\n                    </Row>\n              )\n            }else {\n              return (\n                <Row className=\"justify-content-md-center\">\n                  <h3> You need 2 pandas to be able to breed</h3>\n                </Row>\n              )\n            }\n        })()}\n      </Container>\n    );\n  }\n}\n\nexport default BreedRoom;\n"]},"metadata":{},"sourceType":"module"}