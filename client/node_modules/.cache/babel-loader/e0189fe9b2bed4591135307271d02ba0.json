{"ast":null,"code":"import _regeneratorRuntime from\"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import PandaContract from\"./contracts/PandaContract.json\";import PandaProxy from\"./contracts/PandaProxy.json\";import PandaMarketPlaceContract from\"./contracts/PandaMarketPlace.json\";import PandaMarketPlaceProxy from\"./contracts/PandaMarketPlaceProxy.json\";import getWeb3 from\"./getWeb3\";import Header from\"./components/Header\";import Body from\"./components/Body\";import Footer from\"./components/Footer\";import{BrowserRouter as Router}from'react-router-dom';import\"./App.css\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={storageValue:0,web3:null,accounts:null,contract:null,marketContract:null};_this.componentDidMount=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var web3,accounts,networkId,deployedNetwork,instance,marketDeployedNetwork,marketInstance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getWeb3();case 3:web3=_context.sent;_context.next=6;return web3.eth.getAccounts();case 6:accounts=_context.sent;_context.next=9;return web3.eth.net.getId();case 9:networkId=_context.sent;deployedNetwork=PandaProxy.networks[networkId];instance=new web3.eth.Contract(PandaContract.abi,deployedNetwork&&deployedNetwork.address);marketDeployedNetwork=PandaMarketPlaceProxy.networks[networkId];marketInstance=new web3.eth.Contract(PandaMarketPlaceContract.abi,marketDeployedNetwork&&marketDeployedNetwork.address);// Set web3, accounts, and contract to the state, and then proceed with an\n// example of interacting with the contract's methods.\n_this.setState({web3:web3,accounts:accounts,contract:instance,marketContract:marketInstance},_this.runExample);// Handle page reload on Network or user account changes\nwindow.ethereum.on('chainChanged',function(chainId){document.location.reload();});window.ethereum.on('accountsChanged',function(){document.location.reload();});_context.next=23;break;case 19:_context.prev=19;_context.t0=_context[\"catch\"](0);// Catch any errors for any of the above operations.\nalert(\"Failed to load web3, accounts, or contract. Check console for details.\");console.error(_context.t0);case 23:case\"end\":return _context.stop();}}},_callee,null,[[0,19]]);}));return _this;}_createClass(App,[{key:\"render\",value:function render(){if(!this.state.web3){return/*#__PURE__*/React.createElement(\"div\",null,\"Loading Web3, accounts, and contract...\");}return/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(Header,{contract:this.state.contract,accounts:this.state.accounts}),/*#__PURE__*/React.createElement(Body,{contract:this.state.contract,accounts:this.state.accounts,marketContract:this.state.marketContract,web3:this.state.web3}),/*#__PURE__*/React.createElement(Footer,null)));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/App.js"],"names":["React","Component","PandaContract","PandaProxy","PandaMarketPlaceContract","PandaMarketPlaceProxy","getWeb3","Header","Body","Footer","BrowserRouter","Router","App","state","storageValue","web3","accounts","contract","marketContract","componentDidMount","eth","getAccounts","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","marketDeployedNetwork","marketInstance","setState","runExample","window","ethereum","on","chainId","document","location","reload","alert","console","error"],"mappings":"2iCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,aAAP,KAA0B,gCAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,6BAAvB,CACA,MAAOC,CAAAA,wBAAP,KAAqC,mCAArC,CACA,MAAOC,CAAAA,qBAAP,KAAkC,wCAAlC,CAEA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CAEA,OAAQC,aAAa,GAAIC,CAAAA,MAAzB,KAAsC,kBAAtC,CAEA,MAAO,WAAP,C,GAIMC,CAAAA,G,+SACJC,K,CAAQ,CACNC,YAAY,CAAE,CADR,CAENC,IAAI,CAAE,IAFA,CAGNC,QAAQ,CAAE,IAHJ,CAINC,QAAQ,CAAE,IAJJ,CAKNC,cAAc,CAAC,IALT,C,OAQRC,iB,sEAAoB,mQAGGb,CAAAA,OAAO,EAHV,QAGVS,IAHU,qCAMOA,CAAAA,IAAI,CAACK,GAAL,CAASC,WAAT,EANP,QAMVL,QANU,qCASQD,CAAAA,IAAI,CAACK,GAAL,CAASE,GAAT,CAAaC,KAAb,EATR,QASVC,SATU,eAUVC,eAVU,CAUQtB,UAAU,CAACuB,QAAX,CAAoBF,SAApB,CAVR,CAWVG,QAXU,CAWC,GAAIZ,CAAAA,IAAI,CAACK,GAAL,CAASQ,QAAb,CACf1B,aAAa,CAAC2B,GADC,CAEfJ,eAAe,EAAIA,eAAe,CAACK,OAFpB,CAXD,CAeVC,qBAfU,CAec1B,qBAAqB,CAACqB,QAAtB,CAA+BF,SAA/B,CAfd,CAgBVQ,cAhBU,CAgBO,GAAIjB,CAAAA,IAAI,CAACK,GAAL,CAASQ,QAAb,CACrBxB,wBAAwB,CAACyB,GADJ,CAErBE,qBAAqB,EAAIA,qBAAqB,CAACD,OAF1B,CAhBP,CAqBhB;AACA;AACA,MAAKG,QAAL,CAAc,CAAElB,IAAI,CAAJA,IAAF,CAAQC,QAAQ,CAARA,QAAR,CAAkBC,QAAQ,CAAEU,QAA5B,CAAuCT,cAAc,CAAEc,cAAvD,CAAd,CAAuF,MAAKE,UAA5F,EAEA;AACAC,MAAM,CAACC,QAAP,CAAgBC,EAAhB,CAAmB,cAAnB,CAAmC,SAAAC,OAAO,CAAI,CAC5CC,QAAQ,CAACC,QAAT,CAAkBC,MAAlB,GACD,CAFD,EAGAN,MAAM,CAACC,QAAP,CAAgBC,EAAhB,CAAmB,iBAAnB,CAAsC,UAAM,CAC1CE,QAAQ,CAACC,QAAT,CAAkBC,MAAlB,GACD,CAFD,EA7BgB,iFAkChB;AACAC,KAAK,0EAAL,CAGAC,OAAO,CAACC,KAAR,cAtCgB,qE,wEA2CX,CACP,GAAI,CAAC,KAAK/B,KAAL,CAAWE,IAAhB,CAAsB,CACpB,mBAAO,yEAAP,CACD,CACD,mBACE,oBAAC,MAAD,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,oBAAC,MAAD,EAAQ,QAAQ,CAAG,KAAKF,KAAL,CAAWI,QAA9B,CAAwC,QAAQ,CAAE,KAAKJ,KAAL,CAAWG,QAA7D,EADF,cAEE,oBAAC,IAAD,EAAM,QAAQ,CAAG,KAAKH,KAAL,CAAWI,QAA5B,CAAsC,QAAQ,CAAE,KAAKJ,KAAL,CAAWG,QAA3D,CAAqE,cAAc,CAAI,KAAKH,KAAL,CAAWK,cAAlG,CAAkH,IAAI,CAAI,KAAKL,KAAL,CAAWE,IAArI,EAFF,cAGE,oBAAC,MAAD,MAHF,CADF,CADF,CASD,C,iBAjEed,S,EAoElB,cAAeW,CAAAA,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PandaContract from \"./contracts/PandaContract.json\";\nimport PandaProxy from \"./contracts/PandaProxy.json\";\nimport PandaMarketPlaceContract from \"./contracts/PandaMarketPlace.json\";\nimport PandaMarketPlaceProxy from \"./contracts/PandaMarketPlaceProxy.json\";\n\nimport getWeb3 from \"./getWeb3\";\n\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport Footer from \"./components/Footer\";\n\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nimport \"./App.css\";\n\n\n\nclass App extends Component {\n  state = {\n    storageValue: 0,\n    web3: null,\n    accounts: null,\n    contract: null,\n    marketContract:null,\n  };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = PandaProxy.networks[networkId];\n      const instance = new web3.eth.Contract(\n        PandaContract.abi,\n        deployedNetwork && deployedNetwork.address\n      );\n      const marketDeployedNetwork = PandaMarketPlaceProxy.networks[networkId];\n      const marketInstance = new web3.eth.Contract(\n        PandaMarketPlaceContract.abi,\n        marketDeployedNetwork && marketDeployedNetwork.address\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance , marketContract: marketInstance }, this.runExample);\n\n      // Handle page reload on Network or user account changes\n      window.ethereum.on('chainChanged', chainId => {\n        document.location.reload()\n      })\n      window.ethereum.on('accountsChanged', () => {\n        document.location.reload()\n      })\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      console.error(error);\n    }\n  };\n\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header contract ={this.state.contract} accounts={this.state.accounts}/>\n          <Body contract ={this.state.contract} accounts={this.state.accounts} marketContract = {this.state.marketContract} web3 = {this.state.web3}/>\n          <Footer/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}