{"ast":null,"code":"var _jsxFileName = \"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/PandaFactory.jsx\";\nimport React, { Component } from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport { Col } from \"react-bootstrap\";\nimport { Container } from \"react-bootstrap\";\nimport PandaCard from \"./PandaCard\";\nimport PandaAttributes from \"./PandaAttributes\";\nimport { allEyeVariations, allMouthVariations } from \"../assets/js/shapes\";\nimport { allAnimations } from \"../assets/js/animations\";\nimport { createPandaGen0 } from \"../assets/js/utils\";\nimport \"../assets/css/factory.css\";\nconst eyeShapes = allEyeVariations();\nconst mouthShapes = allMouthVariations();\nconst animations = allAnimations();\nconst defaultDna = {\n  dna: {\n    dnaarmleg: 51,\n    dnaeyepatch: 53,\n    dnainnerearfoot: 54,\n    dnaheadbody: 10,\n    //Pandatributes\n    dnaeyeshape: 1,\n    dnamouthshape: 1,\n    decorationMidcolor: 19,\n    decorationSidescolor: 10,\n    animation: 1,\n    lastNum: 9\n  }\n};\n\nclass PandaFactory extends Component {\n  constructor() {\n    super();\n\n    this.getDna = () => {\n      var dna = \"\";\n      dna += this.state.dna.dnaarmleg;\n      dna += this.state.dna.dnaeyepatch;\n      dna += this.state.dna.dnainnerearfoot;\n      dna += this.state.dna.dnaheadbody;\n      dna += this.state.dna.dnaeyeshape;\n      dna += this.state.dna.dnamouthshape;\n      dna += this.state.dna.decorationMidcolor;\n      dna += this.state.dna.decorationSidescolor;\n      dna += this.state.dna.animation;\n      dna += this.state.dna.lastNum;\n      return dna;\n    };\n\n    this._createPandaGen0 = () => {\n      let _dna = this.getDna();\n\n      createPandaGen0(this.props.contract, this.props.accounts, _dna);\n    };\n\n    this.setDefaultPandaDna = () => {\n      this.setState({\n        dna: defaultDna.dna\n      });\n    };\n\n    this.SliderChange = (_dnaProperty, _dna) => {\n      this.setState(prevState => ({\n        dna: { ...prevState.dna,\n          [_dnaProperty]: _dna\n        }\n      }));\n    };\n\n    this.randomPanda = () => {\n      this.setState(prevState => {\n        let dna = Object.assign({}, prevState.dna);\n        dna.dnaarmleg = Math.floor(Math.random() * 89) + 10;\n        dna.dnaeyepatch = Math.floor(Math.random() * 89) + 10;\n        dna.dnainnerearfoot = Math.floor(Math.random() * 89) + 10;\n        dna.dnaheadbody = Math.floor(Math.random() * 89) + 10; //Pandatributes\n\n        dna.dnaeyeshape = Math.floor(Math.random() * 4) + 1;\n        dna.dnamouthshape = Math.floor(Math.random() * 4) + 1;\n        dna.decorationMidcolor = Math.floor(Math.random() * 89) + 10;\n        dna.decorationSidescolor = Math.floor(Math.random() * 89) + 10;\n        dna.animation = Math.floor(Math.random() * 6) + 1;\n        dna.lastNum = 1;\n        return {\n          dna\n        };\n      });\n    };\n\n    this.state = {\n      dna: {\n        dnaarmleg: 51,\n        dnaeyepatch: 53,\n        dnainnerearfoot: 54,\n        dnaheadbody: 10,\n        //Pandatributes\n        dnaeyeshape: 1,\n        dnamouthshape: 1,\n        decorationMidcolor: 19,\n        decorationSidescolor: 10,\n        animation: 1,\n        lastNum: 9\n      },\n      isMounted: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isMounted: 1\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      isMounted: 0\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center body-title body-title-font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"c-black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \"Pandas Factory\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"c-black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, \"Create your custom Panda\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      id: \"panda-created-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \" \"))), this.props.birthEvent.generation.toString() === \"0\" && this.state.isMounted ? /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      id: \"panda-created-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, this.props.birthEvent.genes > 0 ? \"Your Panda is Alive: Owner:\" + this.props.birthEvent.owner + \", PandaID:\" + this.props.birthEvent.PandaId + \" , Genes:\" + this.props.birthEvent.genes + \" , DadId:\" + this.props.birthEvent.dadId + \" , MumId:\" + this.props.birthEvent.mumId + \" , Generation:\" + this.props.birthEvent.generation : \"\")) : \"\", /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(PandaCard, {\n      dna: this.state.dna,\n      mumId: \"0\",\n      dadId: \"0\",\n      generation: \"0\",\n      birthTime: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"space-between-elements\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(PandaAttributes, {\n      dna: this.state.dna,\n      SliderChange: this.SliderChange,\n      mouthShapeName: mouthShapes[this.state.dna.dnamouthshape],\n      eyeShapeName: eyeShapes[this.state.dna.dnaeyeshape],\n      animationName: animations[this.state.dna.animation],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success m-1\",\n      id: \"default-panda-button\",\n      onClick: this.setDefaultPandaDna,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, \"Default Panda\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success m-1\",\n      id: \"random-panda-button\",\n      onClick: this.randomPanda,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, \"Random Panda\"), /*#__PURE__*/React.createElement(Col, {\n      md: {\n        span: 2,\n        offset: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      id: \"random-panda-button\",\n      onClick: this._createPandaGen0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, \"Create Panda\"))));\n  }\n\n}\n\nexport default PandaFactory;","map":{"version":3,"sources":["/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/PandaFactory.jsx"],"names":["React","Component","Row","Col","Container","PandaCard","PandaAttributes","allEyeVariations","allMouthVariations","allAnimations","createPandaGen0","eyeShapes","mouthShapes","animations","defaultDna","dna","dnaarmleg","dnaeyepatch","dnainnerearfoot","dnaheadbody","dnaeyeshape","dnamouthshape","decorationMidcolor","decorationSidescolor","animation","lastNum","PandaFactory","constructor","getDna","state","_createPandaGen0","_dna","props","contract","accounts","setDefaultPandaDna","setState","SliderChange","_dnaProperty","prevState","randomPanda","Object","assign","Math","floor","random","isMounted","componentDidMount","componentWillUnmount","render","birthEvent","generation","toString","genes","owner","PandaId","dadId","mumId","span","offset"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Row } from \"react-bootstrap\";\nimport { Col } from \"react-bootstrap\";\nimport { Container } from \"react-bootstrap\";\n\nimport PandaCard from \"./PandaCard\";\nimport PandaAttributes from \"./PandaAttributes\";\n\nimport { allEyeVariations, allMouthVariations } from \"../assets/js/shapes\";\nimport { allAnimations } from \"../assets/js/animations\";\n\nimport {createPandaGen0} from \"../assets/js/utils\";\n\nimport \"../assets/css/factory.css\";\n\nconst eyeShapes = allEyeVariations();\nconst mouthShapes = allMouthVariations();\nconst animations = allAnimations();\n\nconst defaultDna = {\n  dna: {\n    dnaarmleg: 51,\n    dnaeyepatch: 53,\n    dnainnerearfoot: 54,\n    dnaheadbody: 10,\n    //Pandatributes\n    dnaeyeshape: 1,\n    dnamouthshape: 1,\n    decorationMidcolor: 19,\n    decorationSidescolor: 10,\n    animation: 1,\n    lastNum: 9,\n  },\n};\n\nclass PandaFactory extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dna: {\n        dnaarmleg: 51,\n        dnaeyepatch: 53,\n        dnainnerearfoot: 54,\n        dnaheadbody: 10,\n        //Pandatributes\n        dnaeyeshape: 1,\n        dnamouthshape: 1,\n        decorationMidcolor: 19,\n        decorationSidescolor: 10,\n        animation: 1,\n        lastNum: 9,\n      },\n      isMounted:0\n    };\n  }\n\n\n  getDna = () => {\n    var dna = \"\";\n    dna += this.state.dna.dnaarmleg;\n    dna += this.state.dna.dnaeyepatch;\n    dna += this.state.dna.dnainnerearfoot;\n    dna += this.state.dna.dnaheadbody;\n    dna += this.state.dna.dnaeyeshape;\n    dna += this.state.dna.dnamouthshape;\n    dna += this.state.dna.decorationMidcolor;\n    dna += this.state.dna.decorationSidescolor;\n    dna += this.state.dna.animation;\n    dna += this.state.dna.lastNum;\n \n    return dna;\n  };\n\n  _createPandaGen0 = () => {\n    let _dna = this.getDna();\n    createPandaGen0(this.props.contract, this.props.accounts,_dna);\n  };\n\n  setDefaultPandaDna = () => {\n    this.setState({\n      dna: defaultDna.dna,\n    });\n  };\n\n  SliderChange = (_dnaProperty, _dna) => {\n    this.setState((prevState) => ({\n      dna: {\n        ...prevState.dna,\n        [_dnaProperty]: _dna,\n      },\n    }));\n  };\n\n  randomPanda = () => {\n    this.setState((prevState) => {\n      let dna = Object.assign({}, prevState.dna);\n\n      dna.dnaarmleg = Math.floor(Math.random() * 89) + 10;\n      dna.dnaeyepatch = Math.floor(Math.random() * 89) + 10;\n      dna.dnainnerearfoot = Math.floor(Math.random() * 89) + 10;\n      dna.dnaheadbody = Math.floor(Math.random() * 89) + 10;\n      //Pandatributes\n      dna.dnaeyeshape = Math.floor(Math.random() * 4) + 1;\n      dna.dnamouthshape = Math.floor(Math.random() * 4) + 1;\n      dna.decorationMidcolor = Math.floor(Math.random() * 89) + 10;\n      dna.decorationSidescolor = Math.floor(Math.random() * 89) + 10;\n      dna.animation = Math.floor(Math.random() * 6) + 1;\n      dna.lastNum = 1;\n\n      return { dna };\n    });\n  };\n\n  componentDidMount(){\n    this.setState({\n      isMounted: 1,\n    });\n  }\n\n  componentWillUnmount(){\n    this.setState({\n      isMounted: 0,\n    });\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-md-center body-title body-title-font\">\n          <div align=\"center\">\n            <h1 className=\"c-black\">Pandas Factory</h1>\n            <p className=\"c-black\">Create your custom Panda</p>\n            <br />\n            <h4 id=\"panda-created-message\"> </h4>\n          </div>\n        </Row>\n        {this.props.birthEvent.generation.toString() === \"0\" && this.state.isMounted ? \n        <Row className=\"justify-content-md-center\">\n          <h5 id=\"panda-created-message\">\n            {this.props.birthEvent.genes > 0\n              ? \"Your Panda is Alive: Owner:\" +\n              this.props.birthEvent.owner +\n              \", PandaID:\" +\n              this.props.birthEvent.PandaId +\n              \" , Genes:\" +\n              this.props.birthEvent.genes +\n              \" , DadId:\" +\n              this.props.birthEvent.dadId +\n              \" , MumId:\" +\n              this.props.birthEvent.mumId +\n              \" , Generation:\" +\n              this.props.birthEvent.generation\n              : \"\"}\n          </h5>\n        </Row>\n        : \"\"}\n       \n        <Row className=\"justify-content-md-center\">\n          <PandaCard dna={this.state.dna} \n                    mumId=\"0\"\n                    dadId=\"0\"\n                    generation=\"0\"\n                    birthTime=\"\"\n          />\n          <span className=\"space-between-elements\"/>\n          <PandaAttributes\n            dna={this.state.dna}\n            SliderChange={this.SliderChange}\n            mouthShapeName={mouthShapes[this.state.dna.dnamouthshape]}\n            eyeShapeName={eyeShapes[this.state.dna.dnaeyeshape]}\n            animationName={animations[this.state.dna.animation]}\n          />\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success m-1\"\n            id=\"default-panda-button\"\n            onClick={this.setDefaultPandaDna}\n          >\n            Default Panda\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"btn btn-success m-1\"\n            id=\"random-panda-button\"\n            onClick={this.randomPanda}\n          >\n            Random Panda\n          </button>\n          {/* </Col> */}\n          <Col md={{ span: 2, offset: 3 }}>\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              id=\"random-panda-button\"\n              onClick={this._createPandaGen0}\n            >\n              Create Panda\n            </button>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default PandaFactory;\n"]},"metadata":{},"sourceType":"module"}