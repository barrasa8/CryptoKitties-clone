[{"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/index.js":"1","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/serviceWorker.js":"2","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/App.js":"3","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/getWeb3.js":"4","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/Header.jsx":"5","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/Body.jsx":"6","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/Footer.jsx":"7","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/PandaFactory.jsx":"8","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/BreedRoom.jsx":"9","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/PandaGallery.jsx":"10","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/PandaMarket.jsx":"11","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/Home.jsx":"12","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/PandaDetail.jsx":"13","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/assets/js/shapes.js":"14","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/assets/js/animations.js":"15","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/assets/js/utils.js":"16","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/PandaAttributes.jsx":"17","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/BreedModal.jsx":"18","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/PandaCard.jsx":"19","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/DnaBadge.jsx":"20","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/Panda.jsx":"21","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/assets/sc/StyledPanda.jsx":"22","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/assets/js/colors.js":"23"},{"size":501,"mtime":1611921147762,"results":"24","hashOfConfig":"25"},{"size":4951,"mtime":1611921147762,"results":"26","hashOfConfig":"25"},{"size":2679,"mtime":1611921147714,"results":"27","hashOfConfig":"25"},{"size":1144,"mtime":1611921147762,"results":"28","hashOfConfig":"25"},{"size":1492,"mtime":1611921147742,"results":"29","hashOfConfig":"25"},{"size":3989,"mtime":1611921147738,"results":"30","hashOfConfig":"25"},{"size":429,"mtime":1611921147742,"results":"31","hashOfConfig":"25"},{"size":5756,"mtime":1611921147742,"results":"32","hashOfConfig":"25"},{"size":5451,"mtime":1611921147738,"results":"33","hashOfConfig":"25"},{"size":2394,"mtime":1611921147742,"results":"34","hashOfConfig":"25"},{"size":2470,"mtime":1611921147750,"results":"35","hashOfConfig":"25"},{"size":728,"mtime":1611921147742,"results":"36","hashOfConfig":"25"},{"size":7047,"mtime":1611921147746,"results":"37","hashOfConfig":"25"},{"size":327,"mtime":1611921147738,"results":"38","hashOfConfig":"25"},{"size":188,"mtime":1611921147738,"results":"39","hashOfConfig":"25"},{"size":5066,"mtime":1611921147738,"results":"40","hashOfConfig":"25"},{"size":7481,"mtime":1611921147742,"results":"41","hashOfConfig":"25"},{"size":2544,"mtime":1611921147738,"results":"42","hashOfConfig":"25"},{"size":1106,"mtime":1611921147750,"results":"43","hashOfConfig":"25"},{"size":1276,"mtime":1611921147738,"results":"44","hashOfConfig":"25"},{"size":5561,"mtime":1611921147742,"results":"45","hashOfConfig":"25"},{"size":1169,"mtime":1611921147738,"results":"46","hashOfConfig":"25"},{"size":1497,"mtime":1611921147738,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"eu762k",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/index.js",[],["96","97"],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/serviceWorker.js",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/App.js",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/getWeb3.js",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/Header.jsx",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/Body.jsx",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/Footer.jsx",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/PandaFactory.jsx",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/BreedRoom.jsx",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/PandaGallery.jsx",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/PandaMarket.jsx",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/Home.jsx",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/PandaDetail.jsx",["98","99","100","101"],"import React, { Component } from 'react';\nimport { Container, Row ,Button, InputGroup,FormControl, Badge} from \"react-bootstrap\";\nimport PandaCard from \"./PandaCard\";\nimport {epochToUTCDate ,getPanda, setOffer, removeOffer,getOffer, setApprovalForAll , buyPanda} from \"../assets/js/utils\";\nimport \"../assets/css/pandaDetail.css\";\n\nclass PandaDetail extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            pandaItem:null,\n            amount:0,\n            offer:{\n                seller: \"\",\n                price: 0, \n                index: 0, \n                tokenId: 0, \n                active: false\n            },\n            pandaOwner:0,\n            IsMarketOpperator:false\n        };\n    }\n\n    async componentDidMount(){\n        let _pandaItem,_offer,_ownerOf,_isApprovedForAll;\n\n        try{\n            _isApprovedForAll = await this.props.contract.methods.isApprovedForAll(this.props.accounts[0],this.props.marketContract.options.address).call();\n            this.setState(() => ({\n              IsMarketOpperator: _isApprovedForAll   \n            }));\n          } catch(e){\n            console.log(\"Not approved for all\",e);\n          }\n\n        try{\n            _pandaItem = await getPanda(this.props.contract, this.props.accounts,this.props.match.params.id);\n        } catch(e){\n            console.log(\"No Pandas\");\n        }\n        \n        try{\n            _offer = await getOffer(this.props.marketContract, this.props.accounts,this.props.match.params.id);\n            if(_offer.active===false){\n                _offer = undefined;\n            }\n        } catch(e){\n            console.log(\"No offer\");\n        }\n\n        try{\n            _ownerOf=await this.props.contract.methods.ownerOf(this.props.match.params.id).call({ from: this.props.accounts[0] }); \n        } catch(e){\n            console.log(\"Error: executing OwnerOf\");\n        }\n\n        this.setState(() => ({\n            pandaItem: _pandaItem,\n            offer: _offer,\n            pandaOwner: _ownerOf\n          }));\n    }\n\n    handleSubmit= async (event) => {\n        event.preventDefault();\n        if(this.state.offer===undefined){\n            await setOffer(this.props.marketContract, this.props.accounts,this.props.web3.utils.toWei(String(this.state.amount)),this.props.match.params.id);\n        }else if(this.props.accounts[0]===this.state.offer.seller){\n            await removeOffer(this.props.marketContract, this.props.accounts,this.props.match.params.id);\n        }else{ \n            await buyPanda(this.props.marketContract, this.props.accounts,this.props.match.params.id,this.state.offer.price);\n        }       \n    }\n\n    handleChange= (event) => {\n        event.preventDefault();\n        event.persist();\n        this.setState(() => ({\n            [event.target.name]: parseInt(event.target.value)\n          }));\n    }\n\n    handleRemove =  async (event) =>{\n        event.preventDefault();\n        await removeOffer(this.props.marketContract, this.props.accounts,this.props.match.params.id);\n    }\n\n    _setApprovalForAll =  async ()=>  {\n        let _isApprovedForAll;\n        \n        setApprovalForAll(this.props.contract,this.props.marketContract,this.props.accounts,true);\n       \n        _isApprovedForAll = await this.props.contract.methods.isApprovedForAll(this.props.accounts[0],this.props.marketContract.options.address).call();\n       \n        this.setState(() => ({\n          IsMarketOpperator: _isApprovedForAll\n        }));\n    }\n\n    render() { \n        return (  \n            <Container fluid>\n                <Row className=\"justify-content-md-center body-title body-title-font\">\n                    <h1>Set your offer</h1>\n                </Row>\n                {this.state.pandaItem != null ?\n                    <Row className=\"justify-content-md-center\">\n                        <PandaCard\n                            key={\"panda-card-\" + this.state.pandaItem.pandaTokenId.toString()}\n                            dna={this.state.pandaItem.dna}\n                            mumId={this.state.pandaItem.mumId}\n                            dadId={this.state.pandaItem.dadId}\n                            generation={this.state.pandaItem.generation}\n                            birthTime={epochToUTCDate(this.state.pandaItem.birthTime)}\n                            className=\"cursor-pointer\"\n                        />\n                        <span className=\"space-between-elements\"/>\n                        <div>\n                            {this.state.offer !== undefined ?\n                            <div>\n                                <h4><Badge variant=\"secondary\">Owner: {this.state.offer.seller}</Badge></h4>\n                                <h4><Badge variant=\"secondary\">Price: {this.props.web3.utils.fromWei(String(this.state.offer.price), 'ether')} ETH</Badge></h4>\n                            </div>\n                            :\"\"}\n                            {this.state.IsMarketOpperator === false & this.state.pandaOwner ==this.props.accounts[0] ?\n                                        <Button id=\"btn-permissions\" onClick={this._setApprovalForAll}>Delegate Operator rights</Button>\n                            :\"\"}\n                            <form id=\"panda-detail-offer\" onSubmit={this.handleSubmit}>\n                                {this.state.offer == undefined ?\n                                    <div>\n                                        {this.state.pandaOwner ==this.props.accounts[0]?\n                                            <div>\n                                            <InputGroup className=\"mb-3\">\n                                                <FormControl aria-label=\"Amount\" name=\"amount\" onChange={this.handleChange}/>\n                                                <InputGroup.Append>\n                                                    <InputGroup.Text>ETH</InputGroup.Text>\n                                                </InputGroup.Append>\n                                            </InputGroup>\n                                            <Button variant=\"success\" type=\"submit\">Sell</Button>\n                                            </div>\n                                        :\"\"}\n                                    </div>   \n                                :\n                                    <div>\n                                        <span className=\"space-between-elements\"/>\n                                        {this.props.accounts[0]==this.state.offer.seller?\n                                        <Button variant=\"danger\" type=\"submit\">Remove Offer</Button>\n                                        :\n                                        <Button variant=\"success\" type=\"submit\">Buy Me</Button>\n                                        }\n                                    </div>\n                                }\n                            </form>\n                        </div>\n                    </Row>\n                :\"\"}\n            </Container>\n        );\n    }\n}\n \nexport default PandaDetail;\n","/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/assets/js/shapes.js",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/assets/js/animations.js",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/assets/js/utils.js",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/PandaAttributes.jsx",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/BreedModal.jsx",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/PandaCard.jsx",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/DnaBadge.jsx",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/components/Panda.jsx",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/assets/sc/StyledPanda.jsx",[],"/home/ismael/Documents/Projects/GIT/CryptoKitties-clone/client/src/assets/js/colors.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":127,"column":93,"nodeType":"108","messageId":"109","endLine":127,"endColumn":95},{"ruleId":"106","severity":1,"message":"107","line":131,"column":51,"nodeType":"108","messageId":"109","endLine":131,"endColumn":53},{"ruleId":"106","severity":1,"message":"107","line":133,"column":64,"nodeType":"108","messageId":"109","endLine":133,"endColumn":66},{"ruleId":"106","severity":1,"message":"107","line":148,"column":64,"nodeType":"108","messageId":"109","endLine":148,"endColumn":66},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]