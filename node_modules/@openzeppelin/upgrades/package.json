{
  "_from": "@openzeppelin/upgrades",
  "_id": "@openzeppelin/upgrades@2.8.0",
  "_inBundle": false,
  "_integrity": "sha512-LzjTQPeljPsgHDPdZyH9cMCbIHZILgd2cpNcYEkdsC2IylBYRHShlbEDXJV9snnqg9JWfzPiKIqyj3XVliwtqQ==",
  "_location": "/@openzeppelin/upgrades",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "@openzeppelin%2fupgrades",
    "fetchSpec": "latest",
    "name": "@openzeppelin/upgrades",
    "raw": "@openzeppelin/upgrades",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "scope": "@openzeppelin",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/@openzeppelin/upgrades/-/upgrades-2.8.0.tgz",
  "_shasum": "8086ab9c99d9f8dac7205030b0f9e7e4a280c4a3",
  "_spec": "@openzeppelin/upgrades",
  "_where": "/home/ismael/Documents/Blockchain Bootcamp/GIT/CryptoKitties-clone",
  "bugs": {
    "url": "https://github.com/OpenZeppelin/openzeppelin-sdk/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@types/cbor": "^2.0.0",
    "axios": "^0.18.0",
    "bignumber.js": "^7.2.0",
    "cbor": "^4.1.5",
    "chalk": "^2.4.1",
    "ethers": "^4.0.20",
    "glob": "^7.1.3",
    "lodash": "^4.17.15",
    "semver": "^5.5.1",
    "spinnies": "^0.4.2",
    "truffle-flattener": "^1.4.0",
    "web3": "1.2.2",
    "web3-eth": "1.2.2",
    "web3-eth-contract": "1.2.2",
    "web3-utils": "1.2.2"
  },
  "deprecated": false,
  "description": "JavaScript library for the OpenZeppelin smart contract platform",
  "devDependencies": {
    "@openzeppelin/test-environment": "^0.1.2",
    "@openzeppelin/test-helpers": "^0.5.4",
    "@types/lodash": "^4.14.149",
    "@types/mocha": "^5.2.5",
    "@types/node": "^10.12.12",
    "@typescript-eslint/eslint-plugin": "^2.12.0",
    "@typescript-eslint/parser": "^2.12.0",
    "chai": "^4.1.2",
    "chai-as-promised": "^7.1.1",
    "chai-bignumber": "^2.0.2",
    "chai-string": "^1.5.0",
    "eslint": "^5.16.0",
    "eslint-config-prettier": "^4.3.0",
    "eslint-plugin-prettier": "^3.1.0",
    "ganache-core": "^2.5.1",
    "mocha": "^6.2.2",
    "mock-dependency": "2.8.0",
    "mock-solc-0.6": "2.8.0",
    "openzeppelin-docs-utils": "github:openzeppelin/docs-utils",
    "prettier": "^1.19.1",
    "sinon": "^6.1.4",
    "sinon-chai": "^3.3.0",
    "solidity-docgen": "^0.3.5",
    "tmp": "^0.0.33",
    "ts-node": "^8.5.4",
    "typescript": "^3.7.3"
  },
  "files": [
    "build",
    "contracts",
    "lib"
  ],
  "gitHead": "c2403ffc65bf9ca46e9fdaf95e742cc50af3e956",
  "homepage": "https://github.com/OpenZeppelin/openzeppelin-sdk/tree/master/packages/lib#readme",
  "keywords": [
    "ethereum",
    "evm",
    "openzeppelin",
    "openzeppelin-sdk",
    "proxy",
    "security",
    "smart-contracts",
    "solidity",
    "upgradeability",
    "zeppelin",
    "zeppelinos"
  ],
  "license": "MIT",
  "lint-staged": {
    "gitDir": "../../",
    "linters": {
      "packages/lib/*/**/*.{js,ts}": [
        "git add",
        "npm run lint --"
      ]
    }
  },
  "main": "./lib/index.js",
  "name": "@openzeppelin/upgrades",
  "optionalDependencies": {},
  "private": false,
  "publishConfig": {
    "access": "public"
  },
  "readme": "# OpenZeppelin SDK JavaScript Library _(@openzeppelin/upgrades)_\n\n[![standard-readme compliant](https://img.shields.io/badge/readme%20style-standard-brightgreen.svg)](https://github.com/RichardLitt/standard-readme)\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/upgrades.svg?style=flat-square)](https://www.npmjs.org/package/@openzeppelin/upgrades)\n[![CircleCI](https://circleci.com/gh/OpenZeppelin/openzeppelin-sdk/tree/master.svg?style=shield)](https://circleci.com/gh/OpenZeppelin/openzeppelin-sdk/tree/master)\n\n> JavaScript library for the OpenZeppelin smart contract platform.\n\nOpenZeppelin SDK is a platform to develop, deploy and operate smart contract\nprojects on Ethereum and every other EVM and eWASM-powered blockchain.\n\nThis is the repository for the OpenZeppelin SDK JavaScript library. It is mainly used\nby the\n[`openzeppelin-sdk` command-line interface](https://github.com/OpenZeppelin/openzeppelin-sdk/tree/master/packages/cli#openzeppelin-sdk-command-line-interface-openzeppelincli),\nwhich is the recommended way to use the OpenZeppelin SDK; but this library can also be\nused directly to operate projects when a programmatic interface is\npreferred or more flexibility and lower-level access is required.\n\n## Install\n\nFirst, install [Node.js](http://nodejs.org/) and [npm](https://npmjs.com/).\nThen, install the OpenZeppelin SDK JavaScript Library running:\n\n```sh\nnpm install @openzeppelin/upgrades\n```\n\n## Usage\n\nSuppose there is a contract called `MyContract` in the file\n`contracts/MyContract.sol`, already compiled to\n`build/contracts/MyContract.json`, and that there is a development blockchain\nnetwork running locally in port 9545.\n\nOpen a Node.js console:\n\n```sh\nnode\n```\n\n```js\n> const { ZWeb3, Contracts, SimpleProject } = require('@openzeppelin/upgrades')\n> // Initialize a web3 provider.\n> ZWeb3.initialize(\"http://localhost:9545\")\n> // Load the contract.\n> const MyContract = Contracts.getFromLocal('MyContract')\n> // Instantiate a project.\n> myProject = new SimpleProject('MyProject', { from: await ZWeb3.defaultAccount() })\n> // Create a proxy for the contract.\n> myProject.createProxy(MyContract).then(proxy => myProxy = proxy)\n> // Make a change on the contract, and compile it.\n> const MyContractUpgraded = Contracts.getFromLocal('MyContract')\n> myProject.upgradeProxy(proxy, MyContractUpgraded)\n```\n\n## Security\n\nIf you find a security issue, please contact us at security@openzeppelin.com. We\ngive rewards for reported issues, according to impact and severity.\n\n## API\n\nTODO.\n\n## Maintainers\n\n* [@spalladino](https://github.com/spalladino)\n* [@jcarpanelli](https://github.com/jcarpanelli)\n* [@ylv-io](https://github.com/ylv-io)\n\n## Contribute\n\nTo contribute, join our\n[community channel on Telegram](https://t.me/zeppelinos) where you can talk to\nall the OpenZeppelin developers, contributors, partners and users.\n\nYou can also follow the recent developments of the project in our\n[blog](https://blog.openzeppelin.com/) and\n[Twitter account](https://twitter.com/openzeppelin).\n\n## License\n\n[MIT](LICENSE.md) Â© OpenZeppelin\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/OpenZeppelin/openzeppelin-sdk.git"
  },
  "scripts": {
    "compile:contracts": "rm -rf build/contracts && ../../bootstrap/node_modules/.bin/oz compile --solc-version 0.5.3 --evm-version constantinople",
    "compile:ts": "rm -rf lib && tsc",
    "lint": "tsc --noEmit && eslint '*/**/*.{js,ts}' --quiet --fix",
    "lint:check": "eslint '*/**/*.{js,ts}' --quiet",
    "prepare": "npm run compile:contracts && npm run compile:ts",
    "prepare-docs": "bash scripts/prepare-docs.sh",
    "prepublishOnly": "echo 'Removing mock contracts...' && grep -hoP '^\\s*contract \\K(\\w+)' contracts/mocks/*.sol | sort | uniq | xargs -t -I% rm build/contracts/%.json",
    "test": "TS_NODE_PROJECT='tsconfig.test.json' mocha --require ts-node/register --recursive test",
    "watch": "tsc -w"
  },
  "version": "2.8.0"
}
